{"version":3,"sources":["components/DropPin.js","../node_modules/require_optional sync","components/MapView.js","components/mode.js","components/Menu/Menu.js","components/Login.js","components/Menu/NavMenu.js","components/Module.js","components/EditModule.js","components/ViewModules.js","components/ManageModules.js","components/ViewPinOnMap.js","App.js","serviceWorker.js","index.js"],"names":["appId","client","Stitch","hasAppClient","getAppClient","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","globalPosition","floatStyle","position","width","height","bottom","right","backgroundColor","color","borderRadius","textAlign","boxShadow","zIndex","HandleUpload","base64data","id","basestring","replace","fileBuffer","Buffer","binaryImageData","BSON","Binary","Uint8Array","aws","AwsServiceClient","args","ACL","Bucket","ContentType","Key","ContentEncoding","Body","request","AwsRequest","Builder","withService","withAction","withRegion","withArgs","execute","build","then","result","console","log","catch","err","OpenFile","props","type","multiple","onChange","e","fileReader","FileReader","readAsDataURL","target","files","onloadend","setbase64data","HandleFileChange","style","src","EditForm","useState","pin","setPin","handleInputChange","name","value","Date","now","imgurl","setimgurl","centered","show","Header","Title","Group","Label","Control","title","as","rows","description","hint","destination","Footer","variant","onClick","cancel","save","PinMarker","modalShow","setModalShow","key","coords","_id","query","update","$set","collection","findOneAndUpdate","objectID","toString","AddpinForm","placeholder","setPlaceHolder","categories","setCategories","useEffect","find","asArray","onSelect","JSON","parse","Toggle","Menu","map","curr","placeholders","Item","eventKey","stringify","className","htmlFor","required","placeHolder","onHide","document","getElementById","lng","lat","owner_id","auth","authInfo","userId","audio","video","insertOne","res","insertedId","setMarkers","markers","module","pins","setModule","upsert","error","DropPin","setPosition","canPlacePin","setCanPlacePin","owner_email","owner_name","shared_array","public","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","ObjectId","match","params","findOne","pipeline","$match","$in","$addFields","__order","$indexOfArray","$sort","aggregate","toArray","center","zoom","latlng","left","window","history","back","fontSize","url","attribution","webpackEmptyContext","req","Error","code","keys","resolve","exports","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","myIcon","divIcon","html","MapView","state","currentLocation","userLocation","userLocationFound","modules","getpins","bind","getUserPosition","getDistance","toRadian","centerMap","mongodb","setState","this","origin","lon1","lat1","lon2","lat2","deltaLat","deltaLon","a","Math","pow","sin","cos","asin","sqrt","degree","PI","isLoggedIn","$ne","shared_with","userProfile","data","email","pin_array","i","length","obj","refs","leafletElement","doubleClickZoom","disable","setTimeout","enable","setView","Marker","icon","Popup","Map","ref","maxZoom","TileLayer","info","idx","location","assign","faStreetView","size","Component","userMode","username","useremail","userID","stitch_res","menuOpen","open","usermode","first_name","userImg","picture","credential","GoogleRedirectCredential","loginWithRedirect","logout","reload","temp_module_name","owner","viewrmenu","href","creatormenu","StyledMenu","setOpen","center_container","top","alt","maxHeigh","maxWidth","checked","set_usermode","listStyleType","paddingLeft","current","opacity","fontColor","styled","nav","Login","login","hasRedirectResult","handleRedirectResult","user","class","margin","StyledBurger","button","Burger","NavMenu","React","Module","fileToBase64","filename","filepath","Promise","file","File","reader","onload","event","current_position","module_info","base64img","user_id","accessed_links","fetch_userinfo","update_user","initializeAppClient","undefined","includes","$addToSet","Container","EditModule","ind","modal","modal2","copied","link","show_modal","show_modal2","hide_modal","hide_modal2","delete_pin_modal","share_modal","list_shared","add_email","delete_email","delete_email_modal","copy_clipboard","save_pin","delete_pin","list_pins","module_form","save_pin_order","save_module","textArea","select","execCommand","copy","modal_message","Modal","marginTop","closeButton","Button","preventDefault","returnNewDocument","$pull","multi","Row","form","Col","xs","FormGroup","FormControl","plaintext","readOnly","sz","maxHeight","overflowY","overflowX","Form","block","textarea","display","justifyContent","marginBottom","Check","inline","label","values","oldIndex","newIndex","arrayMove","renderList","children","renderItem","index","deleteOne","splice","pin_ids","updateOne","Tabs","defaultActiveKey","transition","Tab","ViewModules","my_modules","shared_modules","img1","accessed_modules","goto_module_id","createRef","add_module_cards","fetch_modules","goto_module","0","1","2","$setOnInsert","options","mds","Card","Width","Img","Subtitle","Text","CardDeck","defaultTab","my_modules_tab","pathname","marginLeft","marginRight","controlId","ManageModules","toggle","list_modules","delete_module","add_module","save_modules","all","onSubmit","nextButtonStyle","previousButtonStyle","currentButtonStyle","ViewPinOnMap","pins_line","pins_array","current_pin_index","finish_modal","bounds","reduce","acc","rect","percent","latMin","lngMin","latMax","lngMax","lngPad","latPad","drawpins","AddPaddingToRect","boundingRect","elem","Polyline","positions","userloc","openPopup","temp","toggle_modal","FacebookShareButton","quote","FacebookIcon","go_home","marker_icon","len","paddingTop","openGoogle","ButtonGroup","nextPin","faArrowAltCircleRight","previousPin","faArrowAltCircleLeft","currentPin","faMapMarkerAlt","App","Home","stitchClient","basename","Navbar","Brand","exact","path","component","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7523d7ab.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { Stitch, RemoteMongoClient, BSON } from \"mongodb-stitch-browser-sdk\"\nimport { AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\nimport { Button, Form, Modal, Dropdown } from \"react-bootstrap\";\nimport { ObjectId } from \"mongodb\";\n\nconst appId = \"capstonear_app-xkqng\";\nconst client = Stitch.hasAppClient(appId)\n    ? Stitch.getAppClient(appId)\n    : Stitch.initializeDefaultAppClient(appId);\nconst mongodb = client.getServiceClient(\n    RemoteMongoClient.factory,\n    \"mongodb-atlas\"\n);\nconst db = mongodb.db(\"APP\");\n\nvar globalPosition = {};\n\nconst floatStyle = {\n    position: \"fixed\",\n    width: \"60px\",\n    height: \"60px\",\n    bottom: \"40px\",\n    right: \"40px\",\n    backgroundColor: \"#0C9\",\n    color: \"#FFF\",\n    borderRadius: \"50px\",\n    textAlign: \"center\",\n    boxShadow: \"2px 2px 3px #999\",\n    zIndex: 1500,\n};\n\nvar HandleFileChange = (props, e) => {\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(e.target.files[0])\n    fileReader.onloadend = (e) => {\n        props.setbase64data(e.target.result)\n        return e.target.result\n    }\n}\n\nconst HandleUpload = (base64data, id) => {\n    // Convert the base64 encoded image string to a BSON Binary object\n    var basestring = base64data.replace(/^data:image\\/\\w+;base64,/, '');\n    var fileBuffer = new Buffer(basestring, 'base64');\n    const binaryImageData = new BSON.Binary(new Uint8Array(fileBuffer), 0)\n\n    const aws = client.getServiceClient(AwsServiceClient.factory, \"capstoneusercontent\");\n    // These are the arguments specifically for the s3 service PutObject function\n    const args = {\n        ACL: 'public-read',\n        Bucket: \"capstoneusercontent\",\n        ContentType: \"image/jpeg\",\n        Key: id + '.jpeg',\n        ContentEncoding: 'base64',\n        Body: binaryImageData,\n        // or Body could be a BSON object\n    };\n\n    const request = new AwsRequest.Builder()\n        .withService(\"s3\")\n        .withAction(\"PutObject\")\n        .withRegion(\"us-west-2\") // this is optional\n        .withArgs(args); // depending on the service and action, this may be optional as well\n    aws.execute(request.build())\n        .then(result => {\n            console.log(result)\n        }).catch(err => {\n            console.log(err)\n        });\n}\n\nconst OpenFile = (props) => {\n    return (\n        <div>\n            <input type=\"file\" multiple=\"single\" onChange={(e) => {\n                HandleFileChange(props, e)\n            }}></input>\n            <img style={{\n                height: '200px',\n                width: '300px'\n            }} src={props.base64data}></img>\n        </div>\n    )\n}\n\nexport const EditForm = (props) => {\n    const [pin, setPin] = useState(props.pin);\n    const handleInputChange = (e) => {\n        setPin({ ...pin, [e.target.name]: e.target.value });\n    };\n    const [imgurl, setimgurl] = useState(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now());\n\n\n    return (\n        <Modal {...props} centered show={props.show} style={{ zIndex: \"1600\" }}>\n            <Modal.Header>\n                <Modal.Title>Edit a Pin</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control\n                            type=\"title\"\n                            id=\"title\"\n                            name=\"title\"\n                            value={pin.title}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows=\"2\"\n                            id=\"description\"\n                            name=\"description\"\n                            value={pin.description}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Hint</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows=\"2\"\n                            id=\"hint\"\n                            name=\"hint\"\n                            value={pin.hint}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Destination</Form.Label>\n                        <Form.Control\n                            id=\"destination\"\n                            name=\"destination\"\n                            value={pin.destination}\n                            onChange={handleInputChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <OpenFile base64data={props.base64data} setbase64data={props.setbase64data} imgurl={imgurl} setimgurl={setimgurl}></OpenFile>\n                        <img style={{\n                            height: '200px',\n                            width: '300px'\n                        }} src={imgurl}></img>\n                    </Form.Group>\n                </Form>\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.cancel}>\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    onClick={() => {\n                        /*\n                  \n                                          const title =\n                                              document.getElementById(\"title\").value || \"\";\n                                          const hint =\n                                              document.getElementById(\"hint\").value || \"\";\n                                          const description =\n                                              document.getElementById(\"description\").value || \"\";\n                                          const destination =\n                                              document.getElementById(\"destination\").value || \"\";\n                                          const query = { _id: props.objectID };\n                                          const update = {\n                                              $set: {\n                                                  title: title,\n                                                  description: description,\n                                                  hint: hint,\n                                                  destination: destination,\n                                              },\n                                          };\n                                          // update a pin on the database\n                                          db.collection(\"PINS\")\n                                              .findOneAndUpdate(query, update)\n                                              .then((objectID) => {\n                                                  console.log(objectID._id.toString())\n                                                  console.log(base64data)\n                                                  if(base64data === \"default\")\n                                                  {}\n                                                  else{\n                                                      //upload image\n                                                      HandleUpload(base64data, objectID._id.toString())\n                  \n                                                  }\n                                                  \n                                                  setDefaultValues({\n                                                      title: title,\n                                                      description: description,\n                                                      hint: hint,\n                                                      destination: destination\n                                                  });\n                                                  setimgurl(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now())\n                                                  props.cancel();\n                                              });\n                  */\n                        props.save(pin);\n                    }}\n                >\n                    Submit\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst PinMarker = (props) => {\n    const [modalShow, setModalShow] = useState(false);\n    const [base64data, setbase64data] = useState(\"default\");\n\n    return (\n        <Marker\n            key={globalPosition}\n            position={props.pin.coords}\n            onClick={() => {\n                setModalShow(!modalShow);\n            }}\n        >\n            <EditForm\n                pin={props.pin}\n                id={props.pin._id}\n                show={modalShow}\n                save={(pin) => {\n                    const query = { _id: pin._id };\n                    const update = {\n                        $set: pin,\n                    };\n                    // update a pin on the database\n                    db.collection(\"PINS\")\n                        .findOneAndUpdate(query, update)\n                        .then((objectID) => {\n                            if (base64data === \"default\") { }\n                            else {\n                                //upload image\n                                HandleUpload(base64data, objectID._id.toString())\n\n                            }\n                            setModalShow(false);\n\n                        });\n                }}\n                cancel={() => setModalShow(false)}\n                setbase64data={setbase64data}\n                base64data={base64data}\n            />\n        </Marker>\n    );\n};\n\nconst AddpinForm = (props) => {\n    const [placeholder, setPlaceHolder] = useState({\n        hint: \"\",\n        description: \"\"\n    });\n    const [categories, setCategories] = useState([]);\n    useEffect(() => {\n        db.collection(\"CATEGORIES\")\n            .find({})\n            .asArray()\n            .then(setCategories);\n    }, []);\n\n    return (\n        <Modal {...props} centered style={{ zIndex: \"1600\" }}>\n            <Modal.Header>\n                <Modal.Title>Add a Pin</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group>\n                    <Form.Label>Category</Form.Label>\n                    <Dropdown\n                        onSelect={(e) => {\n                            setPlaceHolder(JSON.parse(e));\n                        }}\n                    >\n                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                            Dropdown Button\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {categories.map(curr => {\n                                const placeholders = { description: curr.description, hint: curr.hint };\n                                return (<Dropdown.Item\n                                    eventKey={JSON.stringify(placeholders)}\n                                >\n                                    {curr.title}\n                                </Dropdown.Item>)\n                            }\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Form.Group>\n                <label className=\"d-block\" htmlFor=\"title\">\n                    Title\n                </label>\n                <input type=\"text\" className=\"w-100\" id=\"title\" required />\n                <label className=\"d-block\" htmlFor=\"description\">\n                    Description\n                </label>\n                <textarea className=\"w-100\" id=\"description\" placeHolder={placeholder.description} required />\n                <label className=\"d-block\" htmlFor=\"hint\">\n                    Hint\n                </label>\n                <textarea className=\"w-100\" id=\"hint\" placeHolder={placeholder.hint} required />\n                <label className=\"d-block\" htmlFor=\"destination\">\n                    Student Feedback\n                </label>\n                <textarea className=\"w-100\" id=\"destination\" required />\n                <label className=\"d-block\" htmlFor=\"pinImage\">\n                    Image\n                </label>\n                <OpenFile base64data={props.base64data} setbase64data={props.setbase64data}> </OpenFile>\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-secondary\" onClick={props.onHide}>\n                    Cancel\n                </button>\n                <button\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                        const title =\n                            document.getElementById(\"title\").value || \"\";\n                        const hint =\n                            document.getElementById(\"hint\").value || \"\";\n                        const description =\n                            document.getElementById(\"description\").value || \"\";\n                        const destination =\n                            document.getElementById(\"destination\").value || \"\";\n                        const { lng, lat } = globalPosition;\n                        // insert a new pin on the database\n                        const pin = {\n                            title: title,\n                            owner_id: client.auth.authInfo.userId,\n                            description: description,\n                            hint: hint,\n                            destination: destination,\n                            audio: \"\",\n                            video: \"\",\n                            coords: [lat, lng],\n                        };\n                        db.collection(\"PINS\")\n                            .insertOne(pin)\n                            .then((res) => {\n                                if (props.base64data === \"default\") { }\n                                else {\n                                    //upload image\n                                    HandleUpload(props.base64data, res.insertedId.toString())\n                                }\n                                // add the new pin to the map on success of adding the pin to\n                                // to the database\n                                props.setMarkers([\n                                    ...props.markers,\n                                    <PinMarker\n\n                                        id={res.insertedId.toString()}\n                                        description={description}\n                                        hint={hint}\n                                        destination={destination}\n                                        title={title}\n                                        objectID={res.insertedId}\n                                        lng={lng}\n                                        lat={lat}\n\n                                        key={res.insertedId}\n                                        pin={pin}\n\n                                    />,\n                                ]);\n                                var module = props.module;\n                                module.pins = [...module.pins, res.insertedId];\n                                props.setModule(module);\n                                const query = { _id: module._id };\n                                const update = {\n                                    $set: {\n                                        pins: module.pins,\n                                    },\n                                };\n                                const options = { upsert: false };\n                                db.collection(\"MODULES\")\n                                    .findOneAndUpdate(query, update, options)\n                                    .then((res) => { })\n                                    .catch(console.error);\n                            });\n                        props.onHide();\n                    }}\n                >\n                    Submit\n                </button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst DropPin = (props) => {\n    const [position, setPosition] = useState([45, 45]);\n    const [markers, setMarkers] = useState([]);\n    const [canPlacePin, setCanPlacePin] = useState(false);\n    const [modalShow, setModalShow] = useState(false);\n    const [base64data, setbase64data] = useState(\"default\");\n    const [module, setModule] = useState({\n        _id: \"\",\n        title: \"\",\n        owner_email: \"\",\n        owner_id: \"\",\n        owner_name: \"\",\n        description: \"\",\n        pins: [],\n        shared_array: [],\n        public: false,\n    });\n\n    // Getting the users current location\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((pos) => {\n            const { latitude, longitude } = pos.coords;\n            setPosition([latitude, longitude]);\n        });\n    }, []);\n\n    // Getting the module and pins for the module\n    useEffect(() => {\n        const query = {\n            _id: ObjectId(props.match.params.id),\n        };\n        db.collection(\"MODULES\")\n            .findOne(query)\n            .then((res) => {\n                setModule(res);\n\n                // Pipeline to ensure that the order of the pins stays the same after the query\n                const pipeline = [\n                    { $match: { _id: { $in: res.pins } } },\n                    {\n                        $addFields: {\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\n                        },\n                    },\n                    { $sort: { __order: 1 } },\n                ];\n\n                db.collection(\"PINS\")\n                    .aggregate(pipeline)\n                    .toArray()\n                    .then((res) => {\n                        setMarkers(\n                            res.map((pin) => {\n                                return <PinMarker\n                                    key={pin._id} pin={pin}\n                                    setbase64data={setbase64data}\n                                    base64data={base64data}\n                                />;\n                            })\n                        );\n                    });\n            })\n            .catch(console.error);\n    }, [props.match.params.id]);\n\n    return (\n        <Map\n            center={position}\n            zoom={13}\n            onClick={(e) => {\n                if (canPlacePin) {\n                    globalPosition = e.latlng;\n                    setModalShow(true);\n                    setCanPlacePin(!canPlacePin);\n                }\n            }}\n        >\n            <AddpinForm\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                setMarkers={setMarkers}\n                markers={markers}\n                setModule={setModule}\n                module={module}\n                setbase64data={setbase64data}\n                base64data={base64data}\n            />\n            <button\n                style={{\n                    zIndex: 1500,\n                    position: \"fixed\",\n                    bottom: \"10px\",\n                    left: \"10px\",\n                    textAlign: \"center\",\n                }}\n                className=\"btn btn-primary\"\n                onClick={() => {\n                    window.history.back();\n                }}\n            >\n                Save\n            </button>\n            <button\n                style={floatStyle}\n                onClick={() => setCanPlacePin(!canPlacePin)}\n            >\n                <div style={{ fontSize: \"40px\" }}>+</div>\n            </button>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <Marker position={position}>\n                <Popup>Your location</Popup>\n            </Marker>\n            {markers}\n        </Map>\n    );\n};\n\nexport default DropPin;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 228;","import React, {Component} from 'react'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\nimport { ObjectId } from 'mongodb'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons'\n\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst Style = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"40px\",\n  backgroundColor: \"#0C9\",\n  color: \"#FFF\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500\n}\nvar greenIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nvar myIcon = new L.divIcon({\n  className: 'my-div-icon',\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\n})\n\nconst floatStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"40px\",\n  backgroundColor: \"#0C9\",\n  color: \"#FFF\",\n  borderRadius: \"50px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\n\nclass MapView extends Component{\n  constructor(props){\n    super(props)\n\n    this.state ={\n      currentLocation: {lat: 45.51, lng:-122.68},\n      zoom: 13,\n      userLocation:[],\n      userLocationFound: false,\n      modules: [],\n      pins: [],\n    }\n\n  this.getpins = this.getpins.bind(this)\n  this.getUserPosition = this.getUserPosition.bind(this)\n  this.getDistance = this.getDistance.bind(this)\n  this.toRadian = this.toRadian.bind(this)\n  this.centerMap = this.centerMap.bind(this)\n\n  const appId = \"capstonear_app-xkqng\"\n  this.client = Stitch.hasAppClient(appId)\n  ? Stitch.getAppClient(appId)\n  : Stitch.initializeDefaultAppClient(appId)\n  const mongodb = this.client.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas\"\n  );\n  this.db = mongodb.db(\"APP\"); \n  }\n  \n\n  getUserPosition(){\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\n      \n      console.log(this.state)\n      \n    })\n  \n  }\n\n  componentDidMount(){\n    this.getUserPosition()\n    this.getpins()\n    \n  }\n\n  //find distance between two points in meters. Returns true for less than meters or false if not\n  getDistance(origin, destination) {\n    var lon1 = this.toRadian(origin[1]);\n    var lat1 = this.toRadian(origin[0]);\n    var lon2 = this.toRadian(destination[1]);\n    var lat2 = this.toRadian(destination[0]);\n\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n\n    var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    var EARTH_RADIUS = 6371;\n    var d = c * EARTH_RADIUS * 1000;\n\n    // 24000 meters ~ 15 miles\n    if(d < 24000)\n      return true;\n    else\n      return false;\n  }\n\n  toRadian(degree) {\n    return degree*Math.PI/180;\n  }\n\n  async getpins() {\n    if(!this.client.auth.isLoggedIn){\n      return\n    }\n    await this.db.collection(\"MODULES\")\n      .find({\n        owner_id: { $ne: this.client.auth.authInfo.userId},\n        shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\n        public: true,\n        pins: { $ne: []},\n      })\n      .asArray()\n      .then((res) => {\n        this.setState({modules: res})\n        res = res.map(curr => {\n          curr = curr.pins[0];\n          return curr;\n        })\n        this.setState({pin_array: res})\n        console.log(\"Pin Array: \", res);\n        console.log(\"Modules: \", this.state.modules);\n      })\n\n    await this.db\n      .collection(\"PINS\")\n      .find({\n        _id: { $in: [...this.state.pin_array]}\n      })\n      .toArray()\n      .then((res) => {\n        res = res.map(curr => {\n          curr = curr.coords;\n          return curr;\n        })\n        console.log(\"Pins: \", res);\n        this.setState({ pins: res });\n      });\n\n    // limits pins to only those within specific miles of userlocation\n    var pins = [...this.state.pins];\n    var modules = [...this.state.modules];\n    for(var i = 0; i < this.state.pins.length; i++) {\n      if(!this.getDistance(this.state.userLocation, this.state.pins[i])) {\n        if(i !== -1)\n          delete pins[i];\n          delete modules[i];\n      }\n    }\n    this.setState({ pins: pins });\n    this.setState({ modules: modules});\n  }\n\n  centerMap(obj,coords)\n  {\n    const map = this.refs.map.leafletElement;\n    map.doubleClickZoom.disable();\n    setTimeout(function() {\n         map.doubleClickZoom.enable();\n    }, 1000);\n    map.setView(coords, 13);\n  }\n\n  render(){\n    const userLocation = this.state.userLocationFound ? (\n      <Marker position={this.state.userLocation} icon= {myIcon} >\n        <Popup >Your location</Popup>\n      </Marker>\n    ) : null\n\n    return (\n      <div id='leaflet-container'>\n      <Map ref='map' center={this.state.currentLocation} zoom={13} maxZoom={18} >\n        <TileLayer\n          \n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n        {userLocation}   \n        {this.state.pins.map((info,idx) => {\n            return <Marker \n              key = {idx} position={info} \n              icon= {new L.divIcon({\n                className: 'my-div-icon',\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>' \n              })} >\n              <Popup>\n                <h1>{this.state.modules[idx].title}</h1>\n                <p>{this.state.modules[idx].description}</p>\n                <p>{this.state.modules[idx].owner_name}</p>\n                <p>{this.state.modules[idx].owner_email}</p>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() =>\n                  window.location.assign(\"#/module/\" + this.state.modules[idx]._id)\n                  }\n                  >View Details</button>\n              </Popup>\n            </Marker>\n          })}  \n          <button style={floatStyle} onClick={()=>this.centerMap(this,this.state.userLocation)} >\n            <div><FontAwesomeIcon icon={faStreetView} size=\"3x\" /></div>\n          </button>\n      </Map>\n      </div>\n    );\n    }\n}\n\nexport default MapView;","export let userMode = true;\r\n\r\nexport function toggle_usermode() {\r\n    userMode = !userMode;\r\n    return userMode;\r\n}\r\n","import React, { Component } from \"react\";\nimport {\n    Stitch,\n    RemoteMongoClient,\n    GoogleRedirectCredential,\n} from \"mongodb-stitch-browser-sdk\";\nimport { ObjectId } from \"mongodb\";\nimport styled from \"styled-components\";\nimport { userMode, toggle_usermode } from \"../mode\";\n \nclass Menu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            useremail: \"\",\n            userID: \"\",\n            stitch_res: [],\n            menuOpen: this.props.open,\n            usermode: userMode, //usermode  true = viewer, false = creator\n        };\n\n        console.log(props);\n        const appId = \"capstonear_app-xkqng\";\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId);\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n            );\n            //select the db in our mongdb atlas cluster\n            this.db = mongodb.db(\"APP\");\n        }\n    }\n\n    async componentDidMount() {\n        //init mongodb stitch\n\n        if (\n            this.client.auth.isLoggedIn &&\n            this.client.auth.authInfo.userProfile\n        ) {\n            this.setState({\n                username: this.client.auth.authInfo.userProfile.data.first_name,\n                useremail: this.client.auth.authInfo.userProfile.data.email,\n                userID: this.client.auth.authInfo.userId,\n                userImg: this.client.auth.authInfo.userProfile.data.picture,\n            });\n\n            console.log(this.client.auth.authInfo.userProfile.data);\n        }\n    }\n\n    //login button handler\n    async login() {\n        //login using google redirect\n        const credential = new GoogleRedirectCredential();\n        this.client.auth.loginWithRedirect(credential);\n        console.log(this.state);\n    }\n\n    async logout() {\n        await this.client.auth.logout();\n        this.setState({\n            username: \"\",\n            useremail: \"\",\n            userID: \"\",\n        });\n        window.location.reload();\n    }\n\n    addamodule() {\n        this.db\n            .collection(\"MODULES\")\n            .insertOne({\n                owner_id: this.state.userID,\n                name: this.state.temp_module_name,\n                owner: this.state.useremail,\n            })\n            .catch(console.error);\n    }\n\n    listmymodules() {\n        if (!this.client.auth.isLoggedIn) {\n            return;\n        }\n        this.db\n            .collection(\"PINS\")\n            .find({ _id: ObjectId(\"5ebed1bc5992681f357d7948\") })\n            .asArray()\n            .then((stitch_res) => {\n                this.setState({ stitch_res });\n                console.log(this.state.stitch_res[0]);\n            });\n    }\n\n    set_usermode() {\n        this.setState({usermode: toggle_usermode()})\n    }\n\n    render() {\n\n        //viewer menu\n        const viewrmenu = this.state.usermode ? (\n            <div>\n                <li>\n                <a href=\"#/modules/student\">View Modules</a>\n                </li>\n                <br />\n            </div>\n        ) : null\n\n        //creator menu\n\n        const creatormenu = this.state.usermode ? null : (\n            <div>\n                <li>\n                    <a href=\"#/modules/instructor\">View Modules</a>\n                </li>\n                <br />\n                <li>\n                    <a href=\"#/modules/edit\">Create Modules</a>\n                </li>\n                <br />\n            </div>\n        ) \n        return (\n            <StyledMenu\n                open={this.props.open}\n                setOpen={this.props.setOpen}\n                center_container={this.props.center_container}\n                style={{}}\n            >\n                <div\n                    style={{\n                        position: \"absolute\",\n                        top: \"2rem\",\n                    }}\n                >\n                    <img\n                        src={this.state.userImg}\n                        alt=\"test\"\n                        style={{\n                            maxHeigh: \"80px\",\n                            maxWidth: \"80px\",\n                            borderRadius: \"50%\",\n                            top: \"1rem\",\n                        }}\n                    ></img>\n                    <div>\n                        <div className=\"radio\">\n                            <label>\n                                <input style={{\n                                    \n                                }} \n                                type=\"radio\" \n                                value=\"option1\" \n                                \n                                checked={this.state.usermode} \n                                onClick={()=>this.set_usermode()}\n                                />\n                                Student\n                            </label>\n                        </div>\n                        <div className=\"radio\">\n                            <label>\n                                <input type=\"radio\" value=\"option1\" checked={!this.state.usermode}\n                                onClick={()=>this.set_usermode()}\n                                />\n                                Instructor\n                            </label>\n                        </div>\n                    </div>\n                    <p\n                        style={{\n                            fontSize: \"1.5rem\",\n                            top: \"4rem\",\n                            color: \"white\",\n                            zIndex: 1002,\n                        }}\n                    >\n                        {\" \"}\n                        Welcome, <br /> {this.state.username}{\" \"}\n                    </p>\n\n                </div>\n\n               \n                \n\n                <ul\n                    style={{ listStyleType: \"none\", paddingLeft: 0}}\n                    onClick={() => {\n                        this.props.center_container.center_container.current.style.opacity = 1;\n                        this.props.setOpen(!this.props.open);\n                    }}\n                >\n                    \n                    <li>\n                        <a href=\"#/\">Home</a>\n                    </li>\n                    <br />\n                    \n                    {viewrmenu}\n                    {creatormenu}\n\n                </ul>\n\n                <a\n                    href=\"#/logout\"\n                    onClick={this.logout}\n                    style={{\n                        position: \"absolute\",\n                        fontSize: \"1rem\",\n                        fontColor: \"#00000\",\n                        bottom: \"10rem\",\n                    }}\n                >\n                    Log Out\n                </a>\n            </StyledMenu>\n        );\n    }\n}\n\n// menu style sheet\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\nconst StyledMenu = styled.nav`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: #343a40;\n    transform: ${({ open }) =>\n        open ? \"translateX(-100)\" : \"translateX(100%)\"};\n    height: 100vh;\n    text-align: left;\n    padding: 2rem;\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    transition: transform 0.3s ease-in-out;\n    z-index: 1501;\n\n    @media (max-width: 150px) {\n        width: 100%;\n    }\n\n    a {\n        font-size: 1.5rem;\n        text-transform: uppercase;\n        padding: 2rem 0;\n        font-weight: Light;\n        letter-spacing: 0.5rem;\n        color: #FFFFF;\n        text-decoration: none;\n        transition: color 0.3s linear;\n\n        @media (max-width: 150px) {\n            font-size: 1rem;\n            text-align: center;\n        }\n\n        &:hover {\n            color: #343078;\n        }\n    }\n`;\n\nexport default Menu;\n","import React, {Component} from 'react'\nimport './Login.css'\nimport {Stitch, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\n\nexport default class Login extends Component{\n    constructor(){\n        super()\n        const appId = \"capstonear_app-xkqng\"\n        this.client = Stitch.getAppClient(appId)\n        this.login = this.login.bind(this)\n    }\n\n    componentDidMount(){\n      if (this.client.auth.hasRedirectResult()) {\n        console.log(\"has results\")\n  \n        this.client.auth.handleRedirectResult().then(user => {\n          this.setState(\n            {\n              username: this.client.auth.authInfo.userProfile.data.name,\n              useremail: this.client.auth.authInfo.userProfile.data.email,\n              userID: this.client.auth.authInfo.userId,\n  \n            }\n          )\n          window.location.assign('#/')\n        }\n        )\n      }\n        \n       \n    }\n\n\n    async login(){\n          \n          //login using google redirect\n          const credential = new GoogleRedirectCredential();\n          await this.client.auth.loginWithRedirect(credential);\n          console.log(this.state)\n          \n        \n    }\n\n\n  render() {\n    return (\n      \n          <div class=\"row justify-content-center\" style={{\n            position: \"fixed\",\n            margin: \"auto\",\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            height: \"50px\"\n          }}>\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\n          </div>\n      \n    )\n  }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport Menu from './Menu'\n\n\nconst StyledBurger = styled.button`\n  position: fixed;\n  top: 10px;\n  right: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1502;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: ${({ open }) => open ? '#FFFFFF' : '#FFFFFF'};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`\n\nconst Burger = ({ open, setOpen, center_container }) => {\n  console.log(center_container.center_container.current)\n  return (\n    <StyledBurger open={open} onClick={() => {\n      setOpen(!open)\n      if(!open)\n        center_container.center_container.current.style.opacity = .5 \n      else\n        center_container.center_container.current.style.opacity = 1\n    }}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  )\n}\n\n\n\n\nconst NavMenu = (center_container) => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div>\n        <Burger open={open} setOpen={setOpen} center_container={center_container} />\n        <Menu open={open} setOpen={setOpen} center_container={center_container}/>\n        </div>\n    )\n}\n\nexport default NavMenu","import React, { Component} from 'react'\n\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport {Container} from 'react-bootstrap'\nimport 'leaflet/dist/leaflet.css'\nimport {Stitch,RemoteMongoClient,BSON} from \"mongodb-stitch-browser-sdk\"\nimport {AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\nimport {ObjectId} from 'mongodb'\n//const BSON = require('bson');\n\nexport default class Module extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            current_position:[],\n            module_info: {\n                name:'',\n                owner_email: '',\n                owner_id: '',\n                owner_name: '',\n                description: '',\n            },\n          \n            base64img:'',\n            user: {\n                _id: '',\n                user_id: '',\n                accessed_links: [],\n            },\n\n        }\n\n        this.getUserPosition = this.getUserPosition.bind(this)\n        this.fetch_userinfo = this.fetch_userinfo.bind(this)\n\n        this.update_user = this.update_user.bind(this);\n\n        const appId = \"capstonear_app-xkqng\"\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId)\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n              );\n              //select the db in our mongdb atlas cluster\n              this.db = mongodb.db(\"APP\");\n            console.log(\"client\")\n        }\n        else{\n            this.client = Stitch.initializeAppClient(appId)\n            console.log(\"client init\")\n        }\n    }\n\n    componentDidMount(){\n\n        this.getUserPosition()\n        this.fetch_userinfo()\n\n        const appId = \"capstonear_app-xkqng\"\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId)\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n              );\n              //select the db in our mongdb atlas cluster\n              this.db = mongodb.db(\"APP\");\n            console.log(\"client\")\n        }\n        else{\n            this.client = Stitch.initializeAppClient(appId)\n            console.log(\"client init\")\n        }\n    }\n\n    async fetch_userinfo(){\n        await this.db.collection(\"MODULES\").find({\n            _id: ObjectId(this.props.match.params.id)\n        })\n        .asArray()\n        .then((module_info) => {\n            if(module_info === undefined || module_info.length === 0)\n            {\n                console.log(module_info)\n                return\n            }\n            this.setState({module_info: module_info[0]}\n            )\n          console.log(module_info)\n        }\n        )\n        .catch((err) => {this.setState({error: err})\n         console.log(err)\n        }\n        )\n\n        const query = {\n            user_id: this.client.auth.authInfo.userId,\n        };\n        await this.db\n            .collection(\"USERS\")\n            .findOne(query)\n            .then((res) => {\n                console.log(\"User: \", res);\n\n                this.setState({ user: res });\n            })\n            .catch(console.error);\n\n        this.update_user();\n    }\n\n    getUserPosition(){\n        navigator.geolocation.getCurrentPosition(position => {\n          this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\n          \n          console.log(this.state)\n          \n        })\n    }\n\n    update_user() {\n        if(\n            this.client.auth.authInfo.userId != this.state.module_info.owner_id && this.state.module_info.public == true && !this.state.module_info.shared_with.includes(this.client.auth.authInfo.userProfile.email)){\n            const query = {\n                _id: this.state.user._id,\n                user_id: this.client.auth.authInfo.userId,\n            };\n            const update = { $addToSet: { accessed_links: ObjectId(this.state.module_info._id) } };\n    \n            this.db\n                .collection(\"USERS\")\n                .findOneAndUpdate(query, update)\n                .then((res) => {\n                    console.log(\"Update response: \", res);\n                })\n                .catch(console.error);\n        }\n    }\n\n    renderMap(){\n        const userLocation = this.state.userLocationFound ? (\n            <Marker position={this.state.userLocation}>\n              <Popup >Your location</Popup>\n            </Marker>\n          ) : null\n\n        return (\n        <div id='leaflet-container'>\n        <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\n            <TileLayer\n            \n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n            />\n            {userLocation}     \n        </Map>\n        </div>\n        )   \n    }\n\n\n    fileToBase64 = (filename, filepath) => {\n        return new Promise(resolve => {\n          var file = new File([filename], filepath);\n          var reader = new FileReader();\n          // Read file content on file loaded event\n          reader.onload = function(event) {\n            resolve(event.target.result);\n          };\n          \n          // Convert data to base64 \n          reader.readAsDataURL(file);\n        });\n      };\n\n\n    render(){\n      \n        return(\n            <Container>\n                title: \n                <br />\n                {this.state.module_info.title}\n                <br />\n                <br />\n\n                owner_email: \n                <br />\n                {this.state.module_info.owner_email}\n                <br />\n                <br />\n\n                owner_name: \n                <br />\n                {this.state.module_info.owner_name}\n                <br />\n                <br />\n\n                owner_id: \n                <br />\n                {this.state.module_info.owner_id}\n                <br />\n                <br />\n\n                description: \n                <br />\n                {this.state.module_info.description}\n                <br />\n                <br />\n              \n             \n        \n\n                <button className='btn btn-primary' \n                        onClick={() =>\n                            window.location.assign(\n                                \"#/module/\" + this.state.module_info._id+\"/pins\"\n                        )}\n                        >start module</button>\n            </Container>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport {\n    Container,\n    Row,\n    Col,\n    Form,\n    Button,\n    Tabs,\n    Tab,\n    Modal,\n    FormControl,\n    FormGroup,\n} from \"react-bootstrap\";\nimport { List, arrayMove } from \"react-movable\";\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport { ObjectId } from \"mongodb\";\nimport \"./EditModule.css\";\n\nimport { EditForm } from \"./DropPin\";\n\n// @classdesc Used to make the Edit Module view.\nexport default class EditModule extends Component {\n    // Creates a new EditModule\n    // @param {Object} props\n    // @class\n    constructor(props) {\n        super(props);\n        this.state = {\n            module_info: {\n                _id: \"\",\n                title: \"\",\n                owner_email: \"\",\n                owner_id: \"\",\n                owner_name: \"\",\n                description: \"\",\n                pins: [],\n                shared_with: [],\n                public: false,\n            },\n            email: \"\",\n            shared_with: [],\n            pins: [],\n            idx: -1,\n            ind: -1,\n            modal: null,\n            modal2: null,\n            copied: false,\n            link: \"\",\n        };\n\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\n\n        this.show_modal = this.show_modal.bind(this);\n        this.show_modal2 = this.show_modal2.bind(this);\n        this.hide_modal = this.hide_modal.bind(this);\n        this.hide_modal2 = this.hide_modal2.bind(this);\n        this.delete_pin_modal = this.delete_pin_modal.bind(this);\n        this.share_modal = this.share_modal.bind(this);\n        this.list_shared = this.list_shared.bind(this);\n        this.add_email = this.add_email.bind(this);\n        this.delete_email = this.delete_email.bind(this);\n        this.delete_email_modal = this.delete_email_modal.bind(this);\n        this.copy_clipboard = this.copy_clipboard.bind(this);\n\n        this.save_pin = this.save_pin.bind(this);\n        this.delete_pin = this.delete_pin.bind(this);\n        this.list_pins = this.list_pins.bind(this);\n        this.module_form = this.module_form.bind(this);\n        this.save_pin_order = this.save_pin_order.bind(this);\n        this.save_module = this.save_module.bind(this);\n\n        const appId = \"capstonear_app-xkqng\";\n        this.client = Stitch.hasAppClient(appId)\n            ? Stitch.getAppClient(appId)\n            : Stitch.initializeDefaultAppClient(appId);\n        const mongodb = this.client.getServiceClient(\n            RemoteMongoClient.factory,\n            \"mongodb-atlas\"\n        );\n        this.db = mongodb.db(\"APP\");\n\n        this.fetch_userinfo();\n    }\n\n    // Gets the module ID from the routing parameter and uses it to get the\n    // associated module and pins for that module.\n    // @return {Promise} Query to set state.module_info and state.pins\n    async fetch_userinfo() {\n        const query = {\n            _id: ObjectId(this.props.match.params.id),\n        };\n\n        await this.db\n            .collection(\"MODULES\")\n            .findOne(query)\n            .then((res) => {\n                console.log(\"Module: \", res);\n                this.setState({ module_info: res });\n\n                // Pipeline to ensure that the order of the pins stays the same after the query\n                const pipeline = [\n                    { $match: { _id: { $in: res.pins } } },\n                    {\n                        $addFields: {\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\n                        },\n                    },\n                    { $sort: { __order: 1 } },\n                ];\n\n                this.db\n                    .collection(\"PINS\")\n                    .aggregate(pipeline)\n                    .toArray()\n                    .then((res) => {\n                        console.log(\"Pins: \", res);\n                        this.setState({ pins: res });\n                    });\n            })\n            .catch(console.error);\n    }\n\n    // copies textarea to clipboard and sets copy state\n    copy_clipboard() {\n        const e = this.textArea;\n        e.select();\n        document.execCommand(\"copy\");\n        this.setState({ copy: true });\n    }\n\n    // Sets state.modal to true\n    show_modal(id) {\n        this.setState({ modal: id });\n    }\n\n    // Sets state.modal2 to true\n    show_modal2(id) {\n        this.setState({ modal2: id });\n    }\n\n    // Sets state.modal to false\n    hide_modal() {\n        this.setState({ modal: null });\n    }\n\n    // Sets state.modal2 to false\n    hide_modal2() {\n        this.setState({ modal2: null });\n    }\n\n    // @return {JSX.Element} Modal to confirm deletion\n    delete_pin_modal() {\n        var modal_message;\n        if (this.state.idx < 0) modal_message = <p>Nothing to delete</p>;\n        else\n            modal_message = (\n                <p>\n                    Are you sure you want to delete{\" \"}\n                    <b>{this.state.pins[this.state.idx].title}</b>?\n                </p>\n            );\n\n        return (\n            <Modal\n                // size=\"sm\"\n                show={this.state.modal === \"delete\"}\n                onHide={(e) => {\n                    this.hide_modal();\n                }}\n                style={{\n                    marginTop: \"50px\",\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Confirm Deletion</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{modal_message}</Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant=\"danger\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            if (this.state.idx > -1)\n                                this.delete_pin(this.state.idx);\n                            this.hide_modal();\n                        }}\n                    >\n                        Delete\n                    </Button>{\" \"}\n                    <Button\n                        variant=\"secondary\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.hide_modal();\n                        }}\n                    >\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    // @return {JSX.Element} Modal to confirm deletion of email\n    delete_email_modal() {\n        var modal_message;\n        if (this.state.ind < 0) modal_message = <p>Nothing to delete</p>;\n        else\n            modal_message = (\n                <p>\n                    Are you sure you want to delete{\" \"}\n                    <b>{this.state.module_info.shared_with[this.state.ind]}</b>?\n                </p>\n            );\n\n        return (\n            <Modal\n                // size=\"sm\"\n                show={this.state.modal2 === \"delete_email\"}\n                onHide={(e) => {\n                    this.hide_modal2();\n                }}\n                style={{\n                    marginTop: \"50px\",\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Confirm Deletion</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{modal_message}</Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant=\"danger\"\n                        onClick={(e) => {\n                            if (this.state.ind > -1)\n                                this.delete_email(this.state.ind);\n                            this.hide_modal2();\n                        }}\n                    >\n                        Delete\n                    </Button>{\" \"}\n                    <Button\n                        variant=\"secondary\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.hide_modal2();\n                        }}\n                    >\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    // This function adds a email to MODULES.shared_with and avoids duplicates\n    add_email() {\n        const query = { _id: this.state.module_info._id };\n        const update = {\n            $addToSet: { shared_with: this.state.email },\n        };\n        const options = { upsert: false, returnNewDocument: true };\n\n        this.db\n            .collection(\"MODULES\")\n            .findOneAndUpdate(query, update, options)\n            .then((res) => {\n                var shared_with = res.shared_with;\n                this.setState({ shared_with: shared_with });\n                this.setState({ module_info: res });\n                console.log(\"Save response: \", res);\n            })\n            .catch(console.error);\n    }\n\n    // This function will remove a email from MODULES.shared_with\n    // @param {number} ind - The index of the email to delete\n    delete_email(ind) {\n        const query = { _id: this.state.module_info._id };\n        const update = {\n            $pull: { shared_with: this.state.shared_with[ind] },\n        };\n        const options = { multi: false, returnNewDocument: true };\n\n        this.db\n            .collection(\"MODULES\")\n            .findOneAndUpdate(query, update, options)\n            .then((res) => {\n                var shared_with = res.shared_with;\n                this.setState({ shared_with: shared_with, ind: -1 });\n                this.setState({ module_info: res });\n                console.log(\"Save response: \", res);\n            })\n            .catch(console.error);\n    }\n\n    // Creates the list of emails in MODULES.shared_with\n    // @return {JSX.Element} The list of emails.\n    list_shared() {\n        return this.state.module_info.shared_with.map((module_info, ind) => {\n            return (\n                <div key={ind}>\n                    <Row form>\n                        <Col xs=\"8\">\n                            <FormGroup>\n                                <FormControl\n                                    plaintext\n                                    readOnly\n                                    type=\"text\"\n                                    value={\n                                        this.state.module_info.shared_with[ind]\n                                    }\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col>\n                            <Button\n                                variant=\"danger\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    this.setState({ ind: ind });\n                                    this.show_modal2(\"delete_email\");\n                                }}\n                            >\n                                Delete\n                            </Button>\n                        </Col>\n                    </Row>\n                    {this.delete_email_modal()}\n                </div>\n            );\n        });\n    }\n\n    // Modal to display MODULE.shared_with emails to allow adding and deleting\n    share_modal() {\n        return (\n            <Modal\n                sz=\"lg\"\n                show={this.state.modal === \"share\"}\n                onHide={(event) => {\n                    this.hide_modal();\n                }}\n                style={{\n                    maxHeight: \"100vh\",\n                    marginTop: \"50px\",\n                }}\n            >\n                <Modal.Header closeButton>Shared With</Modal.Header>\n                <Modal.Body>\n                    <div\n                        style={{\n                            maxHeight: \"calc(100vh - 450px)\",\n                            overflowY: \"auto\",\n                            overflowX: \"hidden\",\n                        }}\n                    >\n                        {this.list_shared()}\n                    </div>\n                </Modal.Body>\n                <Modal.Footer\n                    style={{\n                        maxHeight: \"calc(100vh - 450px)\",\n                        overflowY: \"auto\",\n                        overflowX: \"hidden\",\n                    }}\n                >\n                    <Form\n                        style={{\n                            position: \"relative\",\n                            margin: \"auto\",\n                        }}\n                    >\n                        <Form.Group>\n                            <FormControl\n                                id=\"email\"\n                                type=\"email\"\n                                value={this.state.email}\n                                onChange={(e) => {\n                                    var email = this.state.email;\n                                    email = e.target.value;\n                                    this.setState({ email: email });\n                                }}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Button\n                                variant=\"primary\"\n                                size=\"lg\"\n                                block\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    if (this.state.email !== \"\")\n                                        this.add_email();\n                                }}\n                            >\n                                Add\n                            </Button>\n                            <Button\n                                variant=\"primary\"\n                                size=\"lg\"\n                                block\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    this.hide_modal();\n                                }}\n                            >\n                                Save\n                            </Button>\n                            <Form.Group\n                                style={{\n                                    marginTop: \"15px\",\n                                }}\n                            >\n                                <textarea\n                                    ref={(textarea) =>\n                                        (this.textArea = textarea)\n                                    }\n                                    plaintext\n                                    readOnly\n                                    value={this.state.link}\n                                    placeholder=\"Sharing This Module Requires They Be Set To Public!\"\n                                    style={{\n                                        width: \"100%\",\n                                        height: \"80px\",\n                                    }}\n                                />\n                                <Button\n                                    variant=\"secondary\"\n                                    size=\"sm\"\n                                    block\n                                    onClick={(event) => {\n                                        event.preventDefault();\n                                        this.setState({\n                                            link:\n                                                window.location.origin +\n                                                \"/ar-app/#/module/\" +\n                                                this.state.module_info._id,\n                                        });\n                                        this.copy_clipboard();\n                                    }}\n                                >\n                                    Copy Link\n                                </Button>\n                                {this.state.copy ? (\n                                    <div style={{ color: \"green\" }}>\n                                        Copied to clipboard!\n                                    </div>\n                                ) : null}\n                            </Form.Group>\n                        </Form.Group>\n                    </Form>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    // @return {JSX.Element} Form to fill out module title, description, and\n    // public/private status\n    module_form() {\n        return (\n            <Form>\n                <Form.Group>\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                        type=\"title\"\n                        id=\"title\"\n                        value={this.state.module_info.title}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.title = e.target.value;\n                            this.setState({ module_info: module_info });\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows=\"5\"\n                        id=\"description\"\n                        value={this.state.module_info.description}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.description = e.target.value;\n                            this.setState({ module_info: module_info });\n                        }}\n                    />\n                </Form.Group>\n\n                <Form.Group\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        marginBottom: \"0\",\n                    }}\n                >\n                    <Form.Check\n                        inline\n                        type=\"radio\"\n                        label=\"Public\"\n                        name=\"formHorizontalRadios\"\n                        id=\"true\"\n                        checked={this.state.module_info.public}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.public = true;\n                            this.setState({\n                                module_info: module_info,\n                            });\n                        }}\n                    />\n                    <Form.Check\n                        inline\n                        type=\"radio\"\n                        label=\"Private\"\n                        name=\"formHorizontalRadios\"\n                        id=\"false\"\n                        checked={!this.state.module_info.public}\n                        onChange={(e) => {\n                            var module_info = this.state.module_info;\n                            module_info.public = false;\n                            this.setState({\n                                module_info: module_info,\n                            });\n                        }}\n                    />\n                </Form.Group>\n            </Form>\n        );\n    }\n\n    // Creates the list of pins based on state.pins. Uses the react-movable\n    // library to make the list of pins draggable.\n    // @return {JSX.Element} The list of pins.\n    list_pins() {\n        return (\n            <List\n                values={this.state.pins}\n                onChange={({ oldIndex, newIndex }) => {\n                    var pins = this.state.pins;\n                    pins = arrayMove(pins, oldIndex, newIndex);\n                    this.setState({ pins: pins });\n                }}\n                renderList={({ children, props }) => (\n                    <ol\n                        {...props}\n                        style={{\n                            display: \"grid\",\n                            justifyContent: \"center\",\n                            paddingLeft: \"0px\",\n                        }}\n                    >\n                        {children}\n                    </ol>\n                )}\n                renderItem={({ index, props }) => (\n                    <li {...props}>\n                        <Row style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n                            <Col\n                                xs=\"4\"\n                                style={{\n                                    marginTop: \"auto\",\n                                    marginBottom: \"auto\",\n                                }}\n                            >\n                                {this.state.pins[index].title}\n                            </Col>\n                            <Col>\n                                <Button\n                                    variant=\"link\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.setState({ idx: index });\n                                        this.show_modal(\"edit_pin_\" + index);\n                                    }}\n                                >\n                                    Edit\n                                </Button>\n                            </Col>\n                            <Col>\n                                <Button\n                                    variant=\"danger\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.setState({ idx: index });\n                                        this.show_modal(\"delete\");\n                                    }}\n                                >\n                                    Delete\n                                </Button>\n                            </Col>\n                        </Row>\n\n                        <EditForm\n                            pin={this.state.pins[index]}\n                            show={this.state.modal === \"edit_pin_\" + index}\n                            save={(pin) => {\n                                this.save_pin(pin);\n                            }}\n                            cancel={() => this.hide_modal()}\n                        />\n                    </li>\n                )}\n            />\n        );\n    }\n\n    save_pin(pin) {\n        const query = { _id: pin._id };\n        const update = {\n            $set: pin,\n        };\n        // update a pin on the database\n        this.db\n            .collection(\"PINS\")\n            .findOneAndUpdate(query, update)\n            .then((res) => {\n                console.log(\"Pin update response: \", res);\n\n                // Update pin list\n                var pins = this.state.pins;\n                pins[this.state.idx] = pin;\n                this.setState({ pins: pins });\n                this.hide_modal();\n            });\n    }\n\n    // This function will remove a pin from the DB and state.pins\n    // @param {number} idx - The index of the pin to delete\n    delete_pin(idx) {\n        const query = { _id: this.state.pins[idx]._id };\n        this.db\n            .collection(\"PINS\")\n            .deleteOne(query)\n            .then((res) => {\n                console.log(\"Delete response: \", res);\n\n                // Update pin list\n                var pins = this.state.pins;\n                pins.splice(idx, 1);\n                this.setState({ pins: pins, idx: -1 });\n            })\n            .catch(console.error);\n    }\n\n    // Converts state.pins to a list of ObjectIDs, then updates\n    // state.module_info.pins based on the new list\n    save_pin_order() {\n        var module = this.state.module_info;\n        const pin_ids = this.state.pins.map((pin) => {\n            return pin._id;\n        });\n        module.pins = pin_ids;\n        this.setState({ module_info: module });\n    }\n\n    // Saves the module to the DB\n    save_module() {\n        this.save_pin_order();\n        const query = { _id: this.state.module_info._id };\n        const update = {\n            $set: this.state.module_info,\n        };\n        const options = { upsert: false };\n\n        this.db\n            .collection(\"MODULES\")\n            .updateOne(query, update, options)\n            .then((res) => {\n                console.log(\"Save response: \", res);\n\n                // Go back to Manage Module view\n                window.location.assign(\"#/modules/edit/\");\n            })\n            .catch(console.error);\n    }\n\n    // @return {JSX.Element} The EditModule componenet\n    render() {\n        return (\n            <Container\n                style={{\n                    marginTop: \"10px\",\n                    maxWidth: \"540px\",\n                    height:\"100vh\",\n\n                }}\n            >\n                <Form style={{ height: \"100%\" }}>\n                    <Tabs\n                        defaultActiveKey=\"Module Info\"\n                        transition={false}\n                        style={{\n                            textAlign: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Tab eventKey=\"Module Info\" title=\"Module Info\">\n                            {this.module_form()}\n                                <Form.Group>\n                                <Button\n                                    variant=\"primary\"\n                                    size=\"lg\"\n                                    block\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        var id = this.state.module_info._id;\n                                        window.location.assign(\n                                            \"#/module/\" + id + \"/pins/edit\"\n                                        );\n                                    }}\n                                >\n                                    Pin Map\n                                </Button>\n                                <Button\n                                    variant=\"secondary\"\n                                    size=\"lg\"\n                                    block\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.save_module();\n                                    }}\n                                >\n                                    Save\n                                </Button>\n                            </Form.Group>\n\n                            <Form.Group\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Button\n                            variant=\"primary\"\n                            size=\"lg\"\n                            block\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.show_modal(\"share\");\n                            }}\n                        >\n                            Share\n                        </Button>\n                    </Form.Group>\n                        </Tab>\n                        <Tab\n                            eventKey=\"Pins\"\n                            title=\"Pins\"\n                            style={{ height: \"100%\" }}\n                        >\n                            {this.list_pins()}\n                        </Tab>\n                    </Tabs>\n\n                    <Form.Group>\n                        <Button\n                            variant=\"primary\"\n                            size=\"lg\"\n                            block\n                            onClick={(e) => {\n                                e.preventDefault();\n                                var id = this.state.module_info._id;\n                                window.location.assign(\n                                    \"#/module/\" + id + \"/pins/edit\"\n                                );\n                            }}\n                        >\n                            Pin Map\n                        </Button>\n                        <Button\n                            variant=\"secondary\"\n                            size=\"lg\"\n                            block\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.save_module();\n                            }}\n                        >\n                            Save\n                        </Button>\n                    </Form.Group>\n\n                    <Form.Group\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Button\n                            variant=\"primary\"\n                            size=\"lg\"\n                            block\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.show_modal(\"share\");\n                            }}\n                        >\n                            Share\n                        </Button>\n                    </Form.Group>\n\n                </Form>\n                {this.delete_pin_modal()}\n                {this.share_modal()}\n            </Container>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Card, Tab, Tabs, CardDeck, Form, Button } from \"react-bootstrap\";\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport { ObjectId } from \"mongodb\";\nimport { waitForElementToBeRemoved } from \"@testing-library/react\";\n//import {AwsServiceClient, AwsRequest} from 'mongodb-stitch-browser-services-aws'\n\nexport default class ViewModules extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modules: [],\n            my_modules: [],\n            shared_modules: [],\n            img1: \"\",\n            stitch_res: [],\n            user: {\n                _id: '',\n                user_id: '',\n                accessed_links: [],\n            },\n            accessed_modules: [],\n        };\n        \n\n        //refs\n        this.goto_module_id = React.createRef();\n\n        this.add_module_cards = this.add_module_cards.bind(this);\n        this.fetch_modules = this.fetch_modules.bind(this);\n        this.goto_module = this.goto_module.bind(this);\n\n        const appId = \"capstonear_app-xkqng\";\n        if (Stitch.hasAppClient(appId)) {\n            this.client = Stitch.getAppClient(appId);\n            const mongodb = this.client.getServiceClient(\n                RemoteMongoClient.factory,\n                \"mongodb-atlas\"\n            );\n            //select the db in our mongdb atlas cluster\n            this.db = mongodb.db(\"APP\");\n        } else {\n            this.client = Stitch.initializeAppClient(appId);\n            //console.log(\"client init\")\n        }\n    }\n\n    componentDidMount() {\n        this.fetch_modules();\n\n    }\n\n    async fetch_modules() {\n        await this.db\n            .collection(\"MODULES\")\n            .find({\n                owner_id: this.client.auth.authInfo.userId,\n            })\n            .asArray()\n            .then((my_modules) => {\n                this.setState({\n                    my_modules: my_modules,\n                    modules: {\n                        0: my_modules,\n                        1: this.state.shared_modules,\n                        2: this.state.accessed_modules,\n                    },\n                });\n\n                console.log(this.state.my_modules);\n            });\n\n        //fetch shared modules\n        await this.db\n            .collection(\"MODULES\")\n            .find({\n                shared_with: this.client.auth.authInfo.userProfile.data.email,\n            })\n            .asArray()\n            .then((shared_modules) => {\n                this.setState({\n                    shared_modules: shared_modules,\n                    modules: {\n                        0: this.state.my_modules,\n                        1: shared_modules,\n                        2: this.state.accessed_modules,\n                    },\n                });\n                console.log(shared_modules);\n            });\n        console.log(this.state.modules);\n\n        // fetch user collection, create new if not found\n        const query = {\n            user_id: this.client.auth.authInfo.userId,\n        };\n        const update = {\n            $setOnInsert: {accessed_links: [],}\n        };\n        const options = {\n            returnNewDocument: true,\n            upsert: true,\n        };\n        await this.db\n            .collection(\"USERS\")\n            .findOneAndUpdate(query, update, options)\n            .then((res) => {\n                console.log(\"User: \", res);\n                this.setState({ user: res });\n            })\n            .catch(console.error);\n\n        // fetch accessed links and set accessed modules\n        await this.db\n            .collection(\"MODULES\")\n            .find({\n                shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\n                _id: { $in: [...this.state.user.accessed_links]},\n                public: true,\n            })\n            .asArray()\n            .then((accessed_modules) => {\n                this.setState({\n                    accessed_modules: accessed_modules,\n                    modules: {\n                        0: this.state.my_modules,\n                        1: this.state.shared_modules,\n                        2: accessed_modules,\n                    },\n                });\n                console.log(\"Accessed: \",accessed_modules);\n            });\n        console.log(this.state.accessed_modules);\n    }\n\n    goto_module(id) {\n        window.location.assign(\"#/module/\" + id);\n    }\n\n    add_module_cards(type) {\n        \n        if (this.state.modules.length === 0) return;\n\n        const mds = this.state.modules[type].map(function (module, idx) {\n            \n            return (\n                <div className=\"col-md-6 col-lg-4 \" key={idx}>\n                    <Card\n                        className=\"h-100\"\n                        style={{\n                            display: \"fixed\",\n\n                            Width: \"25rem\",\n                            margin: \"0.25rem\",\n                            justifyContent: \"center\",\n                            textAlign: \"center\",\n                        }}\n                    >\n                        <Card.Body>\n                            <Card.Img\n                                variant=\"top\"\n                                src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + module.pins[0] + \".jpeg?versionid=latest&date=\" + Date.now()}\n                            />\n                            <Card.Title>{module.title}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">\n                                by {module.owner_name} ({module.owner_email})\n                            </Card.Subtitle>\n                            <Card.Text>{module.description}</Card.Text>\n                            <div\n                                className=\"btn-toolbar\"\n                                style={{\n                                    justifyContent: \"center\",\n                                }}\n                            >\n                                <div className=\"btn-group mr-1\">\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        onClick={() =>\n                                            window.location.assign(\n                                                \"#/module/\" + module._id\n                                            )\n                                        }\n                                    >\n                                        View Details\n                                    </button>\n                                </div>\n\n                                <div className=\"btn-group mr-1\">\n                                    <button className=\"btn btn-primary\"\n                                        onClick={() =>\n                                            window.location.assign(\n                                                \"#/module/\" + module._id+\"/pins\"\n                                        )\n                                    }>\n                                        Start Module\n                                    </button>\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </div>\n            );\n        });\n        return (\n            <div\n                style={{\n                    top: \"50px\",\n                    bottom: \"0px\",\n                    position: \"relative\",\n                }}\n                className=\"container\"\n            >\n                <CardDeck\n                    style={{\n                        top: \"50px\",\n                    }}\n                >\n                    {mds}\n                </CardDeck>\n            </div>\n        );\n    }\n\n    render() {\n        const url =this.props.location.pathname\n        var defaultTab= null\n        var my_modules_tab=null\n        if(url==\"/modules/student\")\n        {\n            defaultTab=\"Shared Modules\"\n        }\n        else\n        {\n            defaultTab=\"My Modules\"\n            my_modules_tab= (<Tab eventKey=\"My Modules\" title=\"My Modules\">\n                                {this.add_module_cards(0)}\n                            </Tab>)\n        }\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: \"0px\",\n                    bottom: \"0px\",\n                    width: \"100%\",\n                    overflowY: \"scroll\",\n                }}\n            >\n                <div\n                    style={{\n                        top: \"10px\",\n                        bottom: '0px',\n                        position: \"relative\",\n                        height: \"100vh\",\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                    }}\n                >\n                    <Tabs\n                        defaultActiveKey= {defaultTab}\n                        transition={false}\n                        style={{\n                            textAlign: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        {my_modules_tab}\n                        <Tab eventKey=\"Shared Modules\" title=\"Shared with me\">\n                            <div>\n                                {this.add_module_cards(1)}\n                            </div>\n                            <div>\n                                {this.add_module_cards(2)}\n                            </div>\n                        </Tab>\n\n                        <Tab eventKey=\"Go To\" title=\"Go To\">\n                            <Form>\n                                <Form.Group controlId=\"formModuleId\">\n                                    <Form.Label>Module ID:</Form.Label>\n                                    <Form.Control\n                                        required\n                                        type=\"string\"\n                                        placeholder=\"Enter module id\"\n                                        ref={this.goto_module_id}\n                                    />\n                                </Form.Group>\n\n                                <Button\n                                    variant=\"primary\"\n                                    onClick={() => {\n                                        window.location.assign(\n                                            \"#/module/\" +\n                                                this.goto_module_id.current\n                                                    .value\n                                        );\n                                    }}\n                                >\n                                    View Module\n                                </Button>\n                            </Form>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\n\nexport default class ManageModules extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modules: [],\n            modal: false,\n            idx: -1,\n        };\n\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\n\n        this.toggle = this.toggle.bind(this);\n        this.modal_message = this.modal_message.bind(this);\n        this.list_modules = this.list_modules.bind(this);\n        this.delete_module = this.delete_module.bind(this);\n        this.add_module = this.add_module.bind(this);\n        this.save_modules = this.save_modules.bind(this);\n\n        // Setting up DB with Stitch\n        const appId = \"capstonear_app-xkqng\";\n        this.client = Stitch.hasAppClient(appId)\n            ? Stitch.getAppClient(appId)\n            : Stitch.initializeDefaultAppClient(appId);\n        const mongodb = this.client.getServiceClient(\n            RemoteMongoClient.factory,\n            \"mongodb-atlas\"\n        );\n        this.db = mongodb.db(\"APP\");\n\n        this.fetch_userinfo();\n    }\n\n    async fetch_userinfo() {\n        const query = {\n            owner_id: this.client.auth.authInfo.userId,\n        };\n        await this.db\n            .collection(\"MODULES\")\n            .find(query)\n            .toArray()\n            .then((res) => {\n                console.log(\"Modules loaded: \", res);\n\n                this.setState({ modules: res });\n            })\n            .catch(console.error);\n    }\n\n    toggle() {\n        var modal = !this.state.modal;\n        this.setState({ modal: modal });\n    }\n\n    modal_message() {\n        if (this.state.idx < 0) return <p>Nothing to delete</p>;\n        else\n            return (\n                <p>\n                    Are you sure you want to delete{\" \"}\n                    <b>{this.state.modules[this.state.idx].title}</b>?\n                </p>\n            );\n    }\n\n    list_modules() {\n        return this.state.modules.map((module, idx) => {\n            return (\n                <div key={idx} className=\"pt-1\">\n                    <div className=\"row\">\n                        <div className=\"col-6 offset-sm-2 col-sm-4\">\n                            <input\n                                type=\"text\"\n                                value={this.state.modules[idx].title}\n                                onChange={(event) => {\n                                    event.preventDefault();\n\n                                    var modules = [...this.state.modules];\n                                    modules[idx].title = event.target.value;\n                                    this.setState({ modules });\n                                }}\n                            />\n                        </div>\n                        <div className=\"col-6 col-sm-4\">\n                            <button\n                                className=\"btn btn-link float-right\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    var id = this.state.modules[idx]._id;\n                                    window.location.assign(\n                                        \"#/module/\" + id + \"/edit\"\n                                    );\n                                }}\n                            >\n                                Edit\n                            </button>\n                            <button\n                                className=\"btn btn-danger float-right\"\n                                onClick={(event) => {\n                                    event.preventDefault();\n                                    this.setState({ idx: idx });\n                                    this.toggle();\n                                }}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    delete_module(idx) {\n        const query = { _id: this.state.modules[idx]._id };\n        this.db\n            .collection(\"MODULES\")\n            .deleteOne(query)\n            .then((res) => {\n                console.log(\"Delete response: \", res);\n\n                // Update module list\n                var modules = [...this.state.modules];\n                modules.splice(idx, 1);\n                this.setState({ modules: modules, idx: -1 });\n            })\n            .catch(console.error);\n    }\n\n    add_module() {\n        const query = {\n            title: \"title\",\n            owner_id: this.client.auth.authInfo.userId,\n            owner_name: this.client.auth.authInfo.userProfile.name,\n            owner_email: this.client.auth.authInfo.userProfile.email,\n            description: \"\",\n            pins: [],\n            shared_with: [],\n            public: false,\n        };\n\n        this.db\n            .collection(\"MODULES\")\n            .insertOne(query)\n            .then((res) => {\n                console.log(\"Add response: \", res);\n\n                // Navigate to Edit Module view\n                var id = res.insertedId;\n                window.location.assign(\"#/module/\" + id + \"/edit\");\n            })\n            .catch(console.error);\n    }\n\n    save_modules() {\n        Promise.all(\n            this.state.modules.map((module) => {\n                const query = { _id: module._id };\n                const update = {\n                    $set: {\n                        title: module.title,\n                    },\n                };\n                const options = { upsert: false };\n\n                return this.db\n                    .collection(\"MODULES\")\n                    .updateOne(query, update, options);\n            })\n        )\n            .then((res) => {\n                console.log(\"Save response: \", res);\n            })\n            .catch(console.error);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <form\n                    style={{ height: \"100%\" }}\n                    onSubmit={(event) => {\n                        event.preventDefault();\n                        this.save_modules();\n                    }}\n                >\n                    <div\n                        style={{\n                            height: \"70vh\",\n                            overflowY: \"scroll\",\n                            overflowX: \"hidden\"\n                        }}\n                    >\n                        {this.list_modules()}\n                    </div>\n\n                    <div style={{ marginTop: \"10px\" }}>\n                        <button\n                            className=\"btn btn-primary btn-lg btn-block\"\n                            onClick={(event) => {\n                                event.preventDefault();\n                                this.add_module();\n                            }}\n                        >\n                            Add Module\n                        </button>\n                        <button\n                            className=\"btn btn-secondary btn-lg btn-block\"\n                            onClick={(event) => {\n                                event.preventDefault();\n                                this.save_modules();\n                                window.location.assign(\"#/\");\n                            }}\n                        >\n                            Save\n                        </button>\n                    </div>\n                </form>\n                <Modal\n                    show={this.state.modal}\n                    toggle={(event) => {\n                        event.preventDefault();\n                        this.toggle();\n                    }}\n                    style={{\n                        marginTop: \"50px\",\n                    }}\n                >\n                    <Modal.Header\n                        toggle={(event) => {\n                            event.preventDefault();\n                            this.toggle();\n                        }}\n                    >\n                        Confirm Deletion\n                    </Modal.Header>\n                    <Modal.Body>{this.modal_message()}</Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            className=\"btn btn-danger\"\n                            onClick={(event) => {\n                                event.preventDefault();\n                                if (this.state.idx > -1)\n                                    this.delete_module(this.state.idx);\n                                this.toggle();\n                            }}\n                        >\n                            Delete\n                        </button>{\" \"}\n                        <button\n                            className=\"btn btn-secondary\"\n                            onClick={(event) => {\n                                event.preventDefault();\n                                this.toggle();\n                            }}\n                        >\n                            Cancel\n                        </button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { Map, Marker, Popup, TileLayer, Polyline } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\nimport { Stitch, RemoteMongoClient, GoogleRedirectCredential } from \"mongodb-stitch-browser-sdk\"\nimport { ObjectId } from 'mongodb'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleRight, faArrowAltCircleLeft, faMapMarkerAlt, faStreetView } from '@fortawesome/free-solid-svg-icons'\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap'\nimport { userMode } from './mode'\nimport { FacebookShareButton, FacebookIcon } from 'react-share'\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n\nvar myIcon = new L.divIcon({\n  className: 'my-div-icon',\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>'\n})\n\nconst floatStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"40px\",\n  backgroundColor: \"#0C9\",\n  color: \"#FFF\",\n  borderRadius: \"50px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\nconst nextButtonStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"120px\",\n  backgroundColor: \"#74E4E9\",\n  color: \"#000000\",\n  borderRadius: \"40px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\nconst previousButtonStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"240px\",\n  backgroundColor: \"#74E4E9\",\n  color: \"#000000\",\n  borderRadius: \"40px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\nconst currentButtonStyle = {\n  position: \"fixed\",\n  width: \"60px\",\n  height: \"60px\",\n  bottom: \"40px\",\n  right: \"180px\",\n  backgroundColor: \"#0C9\",\n  color: \"#FFF\",\n  borderRadius: \"50px\",\n  textAlign: \"center\",\n  boxShadow: \"2px 2px 3px #999\",\n  zIndex: 1500,\n};\n\nclass ViewPinOnMap extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentLocation: { lat: 45.51, lng: -122.68 },\n      zoom: 13,\n      userLocation: [],\n      userLocationFound: false,\n      username: \"\",\n      useremail: \"\",\n      userID: \"\",\n      stitch_res: {},\n      pin: [],\n      pins_line: [],\n      pins_array: [],\n      current_pin_index: 0,\n      finish_modal: false,\n    }\n    this.bounds = undefined;\n\n    const appId = \"capstonear_app-xkqng\"\n    this.client = Stitch.hasAppClient(appId)\n      ? Stitch.getAppClient(appId)\n      : Stitch.initializeDefaultAppClient(appId)\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    this.db = mongodb.db(\"APP\");\n  }\n\n\n  getUserPosition() {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({ userLocation: [position.coords.latitude, position.coords.longitude], userLocationFound: true, currentLocation: [position.coords.latitude, position.coords.longitude] })\n\n      //console.log(this.state)\n\n    })\n\n  }\n\n  boundingRect(coords) {\n    return coords\n      .reduce((acc, curr) => {\n        const [lat, lng] = curr;\n        acc[0][0] = lat < acc[0][0] ? lat : acc[0][0];\n        acc[0][1] = lng < acc[0][1] ? lng : acc[0][1];\n        acc[1][0] = lat > acc[1][0] ? lat : acc[1][0];\n        acc[1][1] = lng > acc[1][1] ? lng : acc[1][1];\n        return acc;\n      }, [[90, 180], [-90, -180]]);\n  }\n\n  AddPaddingToRect(rect, percent = 0.10) {\n    const [latMin, lngMin] = rect[0];\n    const [latMax, lngMax] = rect[1];\n    const lngPad = (lngMax - lngMin) * percent;\n    const latPad = (latMax - latMin) * percent;\n    return [\n      [latMin - latPad, lngMin - lngPad],\n      [latMax + latPad, lngMax + lngPad]\n    ];\n  }\n\n  componentDidMount() {\n    this.getUserPosition()\n    this.drawpins()\n  }\n\n  async drawpins() {\n    if (!this.client.auth.isLoggedIn) {\n      return\n    }\n    const query = { _id: ObjectId(this.props.match.params.id) };\n    await this.db.collection(\"MODULES\").findOne(query)\n      .then((stitch_res) => {\n        this.setState({ stitch_res })\n        const pipeline = [\n          { $match: { _id: { $in: stitch_res.pins } } },\n          {\n            $addFields: {\n              __order: { $indexOfArray: [stitch_res.pins, \"$_id\"] },\n            },\n          },\n          { $sort: { __order: 1 } },\n        ];\n        this.db.collection(\"PINS\").aggregate(pipeline)\n          .toArray()\n          .then((res) => {\n            this.bounds = this.AddPaddingToRect(\n              this.boundingRect([...res.map(elem => elem.coords), this.state.currentLocation]));\n            this.setState({ pins_array: res })\n          });\n\n      }\n      )\n  }\n  drawlines() {\n\n    if (this.state.pins_line.length > 0) {\n      return (\n        <Polyline positions={this.state.pins_line} color={'red'}>\n        </Polyline>\n      )\n    }\n    return\n  }\n  openGoogle(coords) {\n    var url = \"http://maps.google.com?q=\" + coords[0] + \",\" + coords[1]\n    var win = window.open(url, '_blank');\n    return\n  }\n  centerMap(obj, coords) {\n    const map = this.refs.map.leafletElement\n    map.doubleClickZoom.disable();\n    setTimeout(function () {\n      map.doubleClickZoom.enable();\n    }, 1000);\n    map.setView(coords, 13)\n    const pin = this.refs.userloc.leafletElement\n    pin.openPopup()\n  }\n  nextPin() {\n    const map = this.refs.map.leafletElement\n    map.doubleClickZoom.disable();\n    setTimeout(function () {\n      map.doubleClickZoom.enable();\n    }, 1000);\n    var temp = this.state.current_pin_index + 1\n    if (temp >= this.state.pins_array.length - 1) {\n      temp = this.state.pins_array.length - 1\n    }\n    console.log(\"current pin index\", this.state.current_pin_index)\n    map.setView(this.state.pins_array[temp].coords, 13)\n    const pin = this.refs[temp].leafletElement\n    pin.openPopup()\n    this.setState({ current_pin_index: temp })\n  }\n  previousPin() {\n    const map = this.refs.map.leafletElement\n    map.doubleClickZoom.disable();\n    setTimeout(function () {\n      map.doubleClickZoom.enable();\n    }, 1000);\n    var temp = this.state.current_pin_index - 1\n    if (temp <= 0) {\n      temp = 0\n    }\n    map.setView(this.state.pins_array[temp].coords, 13)\n    const pin = this.refs[temp].leafletElement\n    pin.openPopup()\n    this.setState({ current_pin_index: temp })\n  }\n  currentPin() {\n    const map = this.refs.map.leafletElement\n    map.doubleClickZoom.disable();\n    setTimeout(function () {\n      map.doubleClickZoom.enable();\n    }, 1000);\n    map.setView(this.state.pins_array[this.state.current_pin_index].coords)\n  }\n  toggle_modal() {\n    var finish_modal = !this.state.finish_modal\n    this.setState({finish_modal: finish_modal})\n  }\n  go_home(){\n    if(userMode== true)\n    {\n      window.location.assign(\n        \"#/modules/student\");\n    }\n    else\n    {\n      window.location.assign(\n        \"#/modules/instructor\");\n    }\n  }\n  finish_modal() {\n    return (\n      <Modal\n          show={this.state.finish_modal}\n          onHide={() => this.toggle_modal()}\n          style={{\n              marginTop: \"50px\",\n          }}\n      >\n          <Modal.Header closeButton>\n              <Modal.Title>Finish Module</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n                You finished {this.state.stitch_res.title}\n                    <FacebookShareButton\n                      quote={\"title\"}\n                    >\n                      <FacebookIcon/>\n                    </FacebookShareButton>\n                <Form style={{\n                  position: \"relative\",\n                  margin: \"auto\",\n                }}\n                >\n                  <Form.Group>\n                    {/* <Button block onClick ={() => FacebookShareButton()}>Share</Button> */}\n                  </Form.Group>\n                  <Form.Group>\n                    <Button block>Scan QR</Button>\n                  </Form.Group>\n                  <Form.Group>\n                    <Button block onClick={() => this.go_home()}>End Module</Button>\n                  </Form.Group>\n                </Form>\n          </Modal.Body>\n          <Modal.Footer>\n              <Button\n                  variant=\"secondary\"\n                  onClick={() => this.toggle_modal()}\n              >\n                  Cancel\n              </Button>\n          </Modal.Footer>\n      </Modal>)\n  }\n  render() {\n    const userLocation = this.state.userLocationFound ? (\n      <Marker ref='userloc' position={this.state.userLocation} icon={myIcon} >\n        <Popup>You are here</Popup>\n      </Marker>\n    ) : null\n\n    return (\n      <div>\n        <Map ref='map' center={this.state.currentLocation} zoom={13} maxZoom={18}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n          />\n          {userLocation}\n\n          {this.state.pins_array.map((info, idx) => {\n            const len = this.state.pins_array.length;\n            var marker_icon;\n            if (idx == this.state.current_pin_index) {\n              marker_icon = new L.divIcon({\n                className: 'my-div-icon',\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png\"/>'\n              })\n            }\n            else {\n              marker_icon = new L.divIcon({\n                className: 'my-div-icon',\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\n              })\n            }\n            return <Marker\n              key={idx} position={info.coords}\n              icon={marker_icon}\n              ref={idx}  >\n              <Popup >\n                <h1>{info.title}</h1>\n                <p>{info.description}</p>\n                <p>{info.hint}</p>\n                <p>{info.destination}</p>\n                <img style={{\n                  height: 'auto',\n                  width: '100%'\n                }} src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + info._id.toString() + \".jpeg?versionid=latest&date=\" + Date.now()}></img>\n                <Form style={{ paddingTop: \"10px\" }}>\n                  {\n                    (() => {\n                      if (idx === len - 1)\n                        return (\n                          <Form.Group>\n                            <Button onClick={() => this.toggle_modal()} block>\n                              Finish Module\n                            </Button>\n                          </Form.Group>)\n                    })()\n                  }\n                  <Form.Group>\n                    <Button onClick={() => this.openGoogle(info.coords)} variant=\"secondary\" block>\n                      Open Google Map\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </Popup>\n            </Marker>\n\n          })}\n          <button style={floatStyle} onClick={() => this.centerMap(this, this.state.currentLocation)} >\n            <div><FontAwesomeIcon icon={faStreetView} size=\"3x\" /></div>\n          </button>\n          <ButtonGroup>\n            <button style={nextButtonStyle} onClick={() => this.nextPin()}  >\n              <div><FontAwesomeIcon icon={faArrowAltCircleRight} size=\"3x\" /></div>\n            </button>\n            <button style={previousButtonStyle} onClick={() => this.previousPin()} >\n              <div><FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"3x\" /></div>\n            </button>\n            <button style={currentButtonStyle} onClick={() => this.currentPin()} >\n              <div><FontAwesomeIcon icon={faMapMarkerAlt} size=\"3x\" /></div>\n            </button>\n          </ButtonGroup>\n        </Map>\n        {this.finish_modal()}\n      </div>\n    );\n  }\n}\n\nexport default ViewPinOnMap;\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport MapView from \"./components/MapView.js\";\nimport Menu from \"./components/Menu/Menu.js\";\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\nimport Login from \"./components/Login\";\nimport DropPin from \"./components/DropPin\";\nimport NavMenu from \"./components/Menu/NavMenu\";\nimport Module from \"./components/Module\";\nimport EditModule from \"./components/EditModule\";\nimport { Navbar } from \"react-bootstrap\";\nimport ViewModules from \"./components/ViewModules\";\nimport ManageModules from \"./components/ManageModules\";\nimport ViewPinOnMap from \"./components/ViewPinOnMap\";\n\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        const appId = \"capstonear_app-xkqng\";\n        this.client = Stitch.hasAppClient(appId)\n            ? Stitch.getAppClient(appId)\n            : Stitch.initializeDefaultAppClient(appId);\n\n        if (this.client.auth.hasRedirectResult()) {\n            console.log(\"has results\");\n\n            this.client.auth.handleRedirectResult().then((user) => {\n                window.location.assign(\"/\");\n            });\n        } else {\n            //window.location.replace('#/login')\n        }\n        this.state = {\n            isLoggedIn: false,\n        };\n\n        //refs\n\n        this.center_container = React.createRef();\n\n        this.NavMenu = this.NavMenu.bind(this);\n    }\n\n    componentDidMount() {}\n\n    handleStitchClient() {\n        this.setState({\n            stitchClient: this.client,\n            userProfile: this.client.auth.userProfile,\n            isLoggedIn: true,\n        });\n    }\n\n    Home = () => {\n        if (this.client.auth.isLoggedIn) {\n            return (\n                <div>\n                    <MapView />\n                </div>\n            );\n        } else {\n            return <Login />;\n        }\n    };\n\n    NavMenu = () => {\n        if (this.client.auth.isLoggedIn) {\n            return <NavMenu center_container={this.center_container} />;\n        }\n    };\n\n    render() {\n        return (\n            <HashRouter basename=\"/\">\n                <div>\n                    <Navbar\n                        className=\"navbar bg-dark navbar-dark\"\n                        style={{\n                            position: \"fixed\",\n                            width: \"100%\",\n                            height: \"50px\",\n                            zIndex: 1500,\n                        }}\n                    >\n                        <Navbar.Brand href=\"#/\">Context AR</Navbar.Brand>\n                    </Navbar>\n                    {this.NavMenu()}\n                </div>\n\n                <div\n                    ref={this.center_container}\n                    className=\"center_container\"\n                    style={{\n                        position: \"fixed\",\n                        top: \"50px\",\n                        bottom: \"0\",\n                        width: \"100%\",\n                        height: \"calc(100% - 50px)\",\n                    }}\n                >\n                    <Switch>\n                        <Route exact path=\"/menu\" component={Menu} />\n\n                        <Route\n                            exact\n                            path=\"/modules/edit\"\n                            component={ManageModules}\n                        />\n                        <Route exact path=\"/modules/student\" component={ViewModules} />\n                        <Route exact path=\"/modules/instructor\" component={ViewModules} />\n\n                        <Route\n                            exact\n                            path=\"/module/:id/pins/edit\"\n                            component={DropPin}\n                        />\n                        <Route\n                            exact\n                            path=\"/module/:id/pins\"\n                            component={ViewPinOnMap}\n                        />\n\n                        <Route\n                            exact\n                            path=\"/module/:id/edit\"\n                            component={EditModule}\n                        />\n                        <Route path=\"/module/:id\" component={Module} />\n\n                        <Route exact path=\"/\">\n                            {this.Home}\n                        </Route>\n                    </Switch>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}