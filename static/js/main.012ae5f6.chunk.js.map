{"version":3,"sources":["components/DropPin.js","../node_modules/require_optional sync","components/clientdb.js","components/MapView.js","components/mode.js","components/Menu/Menu.js","components/Login.js","components/Menu/NavMenu.js","components/Module.js","components/EditModule.js","components/ViewModules.js","components/ManageModules.js","components/ViewPinOnMap.js","components/completed.js","App.js","serviceWorker.js","index.js"],"names":["globalPosition","floatStyle","position","width","height","bottom","right","backgroundColor","color","borderRadius","textAlign","boxShadow","zIndex","HandleUpload","base64data","id","basestring","replace","fileBuffer","Buffer","binaryImageData","BSON","Binary","Uint8Array","aws","client","getServiceClient","AwsServiceClient","factory","args","ACL","Bucket","ContentType","Key","ContentEncoding","Body","request","AwsRequest","Builder","withService","withAction","withRegion","withArgs","execute","build","then","result","console","log","catch","err","OpenFile","props","type","multiple","onChange","e","fileReader","FileReader","readAsDataURL","target","files","onloadend","setbase64data","HandleFileChange","style","src","EditForm","useState","pin","setPin","handleInputChange","name","value","Date","now","imgurl","setimgurl","centered","show","Header","Title","Group","Label","Control","title","as","rows","description","hint","destination","Footer","variant","onClick","cancel","save","PinMarker","modalShow","setModalShow","key","coords","_id","query","update","$set","db","collection","findOneAndUpdate","objectID","toString","AddpinForm","placeholder","setPlaceHolder","categories","setCategories","useEffect","find","asArray","onSelect","JSON","parse","Toggle","Menu","map","curr","placeholders","Item","eventKey","stringify","className","htmlFor","required","placeHolder","onHide","document","getElementById","lng","lat","owner_id","auth","authInfo","userId","audio","video","insertOne","res","insertedId","setMarkers","markers","module","pins","setModule","upsert","error","DropPin","setPosition","canPlacePin","setCanPlacePin","owner_email","owner_name","shared_array","public","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","ObjectId","match","params","findOne","pipeline","$match","$in","$addFields","__order","$indexOfArray","$sort","aggregate","toArray","center","zoom","latlng","left","window","history","back","fontSize","url","attribution","webpackEmptyContext","req","Error","code","keys","resolve","exports","appId","Stitch","hasAppClient","getAppClient","initializeDefaultAppClient","RemoteMongoClient","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","myIcon","divIcon","html","MapView","state","currentLocation","userLocation","userLocationFound","modules","getpins","bind","getUserPosition","getDistance","toRadian","centerMap","mongodb","setState","this","origin","lon1","lat1","lon2","lat2","deltaLat","deltaLon","a","Math","pow","sin","cos","asin","sqrt","degree","PI","isLoggedIn","$ne","shared_with","userProfile","data","email","pin_array","i","length","obj","refs","leafletElement","doubleClickZoom","disable","setTimeout","enable","setView","Marker","icon","Popup","Map","ref","maxZoom","TileLayer","info","idx","location","assign","faStreetView","size","Component","userMode","username","useremail","userID","stitch_res","menuOpen","open","usermode","first_name","picture","$and","user_id","credential","GoogleRedirectCredential","loginWithRedirect","temp_module_name","owner","viewrmenu","href","creatormenu","StyledMenu","setOpen","center_container","top","userImg","alt","maxHeigh","maxWidth","checked","set_usermode","listStyleType","paddingLeft","current","opacity","logout","reload","fontColor","styled","nav","Login","login","hasRedirectResult","handleRedirectResult","user","class","margin","StyledBurger","button","Burger","NavMenu","React","Module","fileToBase64","filename","filepath","Promise","file","File","reader","onload","event","current_position","module_info","base64img","accessed_links","fetch_userinfo","update_user","initializeAppClient","undefined","includes","$addToSet","Container","EditModule","ind","modal","modal2","copied","link","show_modal","show_modal2","hide_modal","hide_modal2","delete_pin_modal","share_modal","list_shared","add_email","delete_email","delete_email_modal","copy_clipboard","save_pin","delete_pin","list_pins","module_form","save_pin_order","save_module","textArea","select","execCommand","copy","modal_message","Modal","marginTop","closeButton","Button","preventDefault","returnNewDocument","$pull","multi","Row","form","Col","xs","FormGroup","FormControl","plaintext","readOnly","sz","maxHeight","overflowY","overflowX","Form","block","textarea","pathname","display","justifyContent","marginBottom","Check","inline","label","values","oldIndex","newIndex","arrayMove","renderList","children","renderItem","index","deleteOne","splice","pin_ids","updateOne","Tabs","defaultActiveKey","transition","Tab","ViewModules","my_modules","shared_modules","img1","accessed_modules","module_results","goto_module_id","createRef","add_module_cards","fetch_modules","goto_module","0","1","2","$setOnInsert","options","userid","Card","Width","Img","Subtitle","Text","paddingTop","mds","module_card","CardDeck","defaultTab","my_modules_tab","query_modules","userQuery","$regex","$options","docs","forceUpdate","marginLeft","marginRight","onSubmit","controlId","ManageModules","toggle","list_modules","delete_module","add_module","save_modules","all","nextButtonStyle","previousButtonStyle","currentButtonStyle","ViewPinOnMap","pins_line","pins_array","current_pin_index","finish_modal","bounds","search","split","shareUrl","host","reduce","acc","rect","percent","latMin","lngMin","latMax","lngMax","lngPad","latPad","drawpins","AddPaddingToRect","boundingRect","elem","Polyline","positions","userloc","openPopup","temp","toggle_modal","FacebookShareButton","quote","FacebookIcon","go_home","marker_icon","len","openGoogle","ButtonGroup","nextPin","faArrowAltCircleRight","previousPin","faArrowAltCircleLeft","currentPin","faMapMarkerAlt","imgSrc","Completed","setUsername","useParams","App","Home","cleanUrl","join","stitchClient","basename","Navbar","Brand","exact","path","component","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.012ae5f6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { BSON } from \"mongodb-stitch-browser-sdk\"\r\nimport { AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\r\nimport { Button, Form, Modal, Dropdown } from \"react-bootstrap\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { client, db } from \"./clientdb\"\r\n\r\nvar globalPosition = {};\r\n\r\nconst floatStyle = {\r\n    position: \"fixed\",\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    bottom: \"40px\",\r\n    right: \"40px\",\r\n    backgroundColor: \"#0C9\",\r\n    color: \"#FFF\",\r\n    borderRadius: \"50px\",\r\n    textAlign: \"center\",\r\n    boxShadow: \"2px 2px 3px #999\",\r\n    zIndex: 1500,\r\n};\r\n\r\nvar HandleFileChange = (props, e) => {\r\n    let fileReader = new FileReader();\r\n    fileReader.readAsDataURL(e.target.files[0])\r\n    fileReader.onloadend = (e) => {\r\n        props.setbase64data(e.target.result)\r\n        return e.target.result\r\n    }\r\n}\r\n\r\nconst HandleUpload = (base64data, id) => {\r\n    // Convert the base64 encoded image string to a BSON Binary object\r\n    var basestring = base64data.replace(/^data:image\\/\\w+;base64,/, '');\r\n    var fileBuffer = new Buffer(basestring, 'base64');\r\n    const binaryImageData = new BSON.Binary(new Uint8Array(fileBuffer), 0)\r\n\r\n    const aws = client.getServiceClient(AwsServiceClient.factory, \"capstoneusercontent\");\r\n    // These are the arguments specifically for the s3 service PutObject function\r\n    const args = {\r\n        ACL: 'public-read',\r\n        Bucket: \"capstoneusercontent\",\r\n        ContentType: \"image/jpeg\",\r\n        Key: id + '.jpeg',\r\n        ContentEncoding: 'base64',\r\n        Body: binaryImageData,\r\n        // or Body could be a BSON object\r\n    };\r\n\r\n    const request = new AwsRequest.Builder()\r\n        .withService(\"s3\")\r\n        .withAction(\"PutObject\")\r\n        .withRegion(\"us-west-2\") // this is optional\r\n        .withArgs(args); // depending on the service and action, this may be optional as well\r\n    aws.execute(request.build())\r\n        .then(result => {\r\n            console.log(result)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n}\r\n\r\nconst OpenFile = (props) => {\r\n    return (\r\n        <div>\r\n            <input type=\"file\" multiple=\"single\" onChange={(e) => {\r\n                HandleFileChange(props, e)\r\n            }}></input>\r\n            <img style={{\r\n                height: '200px',\r\n                width: '300px'\r\n            }} src={props.base64data}></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const EditForm = (props) => {\r\n    const [pin, setPin] = useState(props.pin);\r\n    const handleInputChange = (e) => {\r\n        setPin({ ...pin, [e.target.name]: e.target.value });\r\n    };\r\n    const [imgurl, setimgurl] = useState(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now());\r\n\r\n\r\n    return (\r\n        <Modal {...props} centered show={props.show} style={{ zIndex: \"1600\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Edit a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control\r\n                            type=\"title\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            value={pin.title}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows=\"2\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            value={pin.description}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Hint</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows=\"2\"\r\n                            id=\"hint\"\r\n                            name=\"hint\"\r\n                            value={pin.hint}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Destination</Form.Label>\r\n                        <Form.Control\r\n                            id=\"destination\"\r\n                            name=\"destination\"\r\n                            value={pin.destination}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <OpenFile base64data={props.base64data} setbase64data={props.setbase64data} imgurl={imgurl} setimgurl={setimgurl}></OpenFile>\r\n                        <img style={{\r\n                            height: '200px',\r\n                            width: '300px'\r\n                        }} src={imgurl}></img>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={props.cancel}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => {\r\n                        /*\r\n                  \r\n                                          const title =\r\n                                              document.getElementById(\"title\").value || \"\";\r\n                                          const hint =\r\n                                              document.getElementById(\"hint\").value || \"\";\r\n                                          const description =\r\n                                              document.getElementById(\"description\").value || \"\";\r\n                                          const destination =\r\n                                              document.getElementById(\"destination\").value || \"\";\r\n                                          const query = { _id: props.objectID };\r\n                                          const update = {\r\n                                              $set: {\r\n                                                  title: title,\r\n                                                  description: description,\r\n                                                  hint: hint,\r\n                                                  destination: destination,\r\n                                              },\r\n                                          };\r\n                                          // update a pin on the database\r\n                                          db.collection(\"PINS\")\r\n                                              .findOneAndUpdate(query, update)\r\n                                              .then((objectID) => {\r\n                                                  console.log(objectID._id.toString())\r\n                                                  console.log(base64data)\r\n                                                  if(base64data === \"default\")\r\n                                                  {}\r\n                                                  else{\r\n                                                      //upload image\r\n                                                      HandleUpload(base64data, objectID._id.toString())\r\n                  \r\n                                                  }\r\n                                                  \r\n                                                  setDefaultValues({\r\n                                                      title: title,\r\n                                                      description: description,\r\n                                                      hint: hint,\r\n                                                      destination: destination\r\n                                                  });\r\n                                                  setimgurl(\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + props.id + \".jpeg?versionid=latest&date=\" + Date.now())\r\n                                                  props.cancel();\r\n                                              });\r\n                  */\r\n                        props.save(pin);\r\n                    }}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst PinMarker = (props) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [base64data, setbase64data] = useState(\"default\");\r\n\r\n    return (\r\n        <Marker\r\n            key={globalPosition}\r\n            position={props.pin.coords}\r\n            onClick={() => {\r\n                setModalShow(!modalShow);\r\n            }}\r\n        >\r\n            <EditForm\r\n                pin={props.pin}\r\n                id={props.pin._id}\r\n                show={modalShow}\r\n                save={(pin) => {\r\n                    const query = { _id: pin._id };\r\n                    const update = {\r\n                        $set: pin,\r\n                    };\r\n                    // update a pin on the database\r\n                    db.collection(\"PINS\")\r\n                        .findOneAndUpdate(query, update)\r\n                        .then((objectID) => {\r\n                            if (base64data === \"default\") { }\r\n                            else {\r\n                                //upload image\r\n                                HandleUpload(base64data, objectID._id.toString())\r\n\r\n                            }\r\n                            setModalShow(false);\r\n\r\n                        });\r\n                }}\r\n                cancel={() => setModalShow(false)}\r\n                setbase64data={setbase64data}\r\n                base64data={base64data}\r\n            />\r\n        </Marker>\r\n    );\r\n};\r\n\r\nconst AddpinForm = (props) => {\r\n    const [placeholder, setPlaceHolder] = useState({\r\n        hint: \"\",\r\n        description: \"\"\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    useEffect(() => {\r\n        db.collection(\"CATEGORIES\")\r\n            .find({})\r\n            .asArray()\r\n            .then(setCategories);\r\n    }, []);\r\n\r\n    return (\r\n        <Modal {...props} centered style={{ zIndex: \"1600\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Add a Pin</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Dropdown\r\n                        onSelect={(e) => {\r\n                            setPlaceHolder(JSON.parse(e));\r\n                        }}\r\n                    >\r\n                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                            Dropdown Button\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {categories.map(curr => {\r\n                                const placeholders = { description: curr.description, hint: curr.hint };\r\n                                return (<Dropdown.Item\r\n                                    eventKey={JSON.stringify(placeholders)}\r\n                                >\r\n                                    {curr.title}\r\n                                </Dropdown.Item>)\r\n                            }\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Form.Group>\r\n                <label className=\"d-block\" htmlFor=\"title\">\r\n                    Title\r\n                </label>\r\n                <input type=\"text\" className=\"w-100\" id=\"title\" required />\r\n                <label className=\"d-block\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"description\" placeHolder={placeholder.description} required />\r\n                <label className=\"d-block\" htmlFor=\"hint\">\r\n                    Hint\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"hint\" placeHolder={placeholder.hint} required />\r\n                <label className=\"d-block\" htmlFor=\"destination\">\r\n                    Student Feedback\r\n                </label>\r\n                <textarea className=\"w-100\" id=\"destination\" required />\r\n                <label className=\"d-block\" htmlFor=\"pinImage\">\r\n                    Image\r\n                </label>\r\n                <OpenFile base64data={props.base64data} setbase64data={props.setbase64data}> </OpenFile>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-secondary\" onClick={props.onHide}>\r\n                    Cancel\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => {\r\n                        const title =\r\n                            document.getElementById(\"title\").value || \"\";\r\n                        const hint =\r\n                            document.getElementById(\"hint\").value || \"\";\r\n                        const description =\r\n                            document.getElementById(\"description\").value || \"\";\r\n                        const destination =\r\n                            document.getElementById(\"destination\").value || \"\";\r\n                        const { lng, lat } = globalPosition;\r\n                        // insert a new pin on the database\r\n                        const pin = {\r\n                            title: title,\r\n                            owner_id: client.auth.authInfo.userId,\r\n                            description: description,\r\n                            hint: hint,\r\n                            destination: destination,\r\n                            audio: \"\",\r\n                            video: \"\",\r\n                            coords: [lat, lng],\r\n                        };\r\n                        db.collection(\"PINS\")\r\n                            .insertOne(pin)\r\n                            .then((res) => {\r\n                                if (props.base64data === \"default\") { }\r\n                                else {\r\n                                    //upload image\r\n                                    HandleUpload(props.base64data, res.insertedId.toString())\r\n                                }\r\n                                // add the new pin to the map on success of adding the pin to\r\n                                // to the database\r\n                                props.setMarkers([\r\n                                    ...props.markers,\r\n                                    <PinMarker\r\n\r\n                                        id={res.insertedId.toString()}\r\n                                        description={description}\r\n                                        hint={hint}\r\n                                        destination={destination}\r\n                                        title={title}\r\n                                        objectID={res.insertedId}\r\n                                        lng={lng}\r\n                                        lat={lat}\r\n\r\n                                        key={res.insertedId}\r\n                                        pin={pin}\r\n\r\n                                    />,\r\n                                ]);\r\n                                var module = props.module;\r\n                                module.pins = [...module.pins, res.insertedId];\r\n                                props.setModule(module);\r\n                                const query = { _id: module._id };\r\n                                const update = {\r\n                                    $set: {\r\n                                        pins: module.pins,\r\n                                    },\r\n                                };\r\n                                const options = { upsert: false };\r\n                                db.collection(\"MODULES\")\r\n                                    .findOneAndUpdate(query, update, options)\r\n                                    .then((res) => { })\r\n                                    .catch(console.error);\r\n                            });\r\n                        props.onHide();\r\n                    }}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst DropPin = (props) => {\r\n    const [position, setPosition] = useState([45, 45]);\r\n    const [markers, setMarkers] = useState([]);\r\n    const [canPlacePin, setCanPlacePin] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [base64data, setbase64data] = useState(\"default\");\r\n    const [module, setModule] = useState({\r\n        _id: \"\",\r\n        title: \"\",\r\n        owner_email: \"\",\r\n        owner_id: \"\",\r\n        owner_name: \"\",\r\n        description: \"\",\r\n        pins: [],\r\n        shared_array: [],\r\n        public: false,\r\n    });\r\n\r\n    // Getting the users current location\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n            const { latitude, longitude } = pos.coords;\r\n            setPosition([latitude, longitude]);\r\n        });\r\n    }, []);\r\n\r\n    // Getting the module and pins for the module\r\n    useEffect(() => {\r\n        const query = {\r\n            _id: ObjectId(props.match.params.id),\r\n        };\r\n        db.collection(\"MODULES\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                setModule(res);\r\n\r\n                // Pipeline to ensure that the order of the pins stays the same after the query\r\n                const pipeline = [\r\n                    { $match: { _id: { $in: res.pins } } },\r\n                    {\r\n                        $addFields: {\r\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\r\n                        },\r\n                    },\r\n                    { $sort: { __order: 1 } },\r\n                ];\r\n\r\n                db.collection(\"PINS\")\r\n                    .aggregate(pipeline)\r\n                    .toArray()\r\n                    .then((res) => {\r\n                        setMarkers(\r\n                            res.map((pin) => {\r\n                                return <PinMarker\r\n                                    key={pin._id} pin={pin}\r\n                                    setbase64data={setbase64data}\r\n                                    base64data={base64data}\r\n                                />;\r\n                            })\r\n                        );\r\n                    });\r\n            })\r\n            .catch(console.error);\r\n    }, [props.match.params.id]);\r\n\r\n    return (\r\n        <Map\r\n            center={position}\r\n            zoom={13}\r\n            onClick={(e) => {\r\n                if (canPlacePin) {\r\n                    globalPosition = e.latlng;\r\n                    setModalShow(true);\r\n                    setCanPlacePin(!canPlacePin);\r\n                }\r\n            }}\r\n        >\r\n            <AddpinForm\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                setMarkers={setMarkers}\r\n                markers={markers}\r\n                setModule={setModule}\r\n                module={module}\r\n                setbase64data={setbase64data}\r\n                base64data={base64data}\r\n            />\r\n            <button\r\n                style={{\r\n                    zIndex: 1500,\r\n                    position: \"fixed\",\r\n                    bottom: \"10px\",\r\n                    left: \"10px\",\r\n                    textAlign: \"center\",\r\n                }}\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                    window.history.back();\r\n                }}\r\n            >\r\n                Save\r\n            </button>\r\n            <button\r\n                style={floatStyle}\r\n                onClick={() => setCanPlacePin(!canPlacePin)}\r\n            >\r\n                <div style={{ fontSize: \"40px\" }}>+</div>\r\n            </button>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <Marker position={position}>\r\n                <Popup>Your location</Popup>\r\n            </Marker>\r\n            {markers}\r\n        </Map>\r\n    );\r\n};\r\n\r\nexport default DropPin;\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 229;","import { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\"\r\n\r\nconst appId = \"capstonear_app-xkqng\";\r\nexport const client = Stitch.hasAppClient(appId)\r\n    ? Stitch.getAppClient(appId)\r\n    : Stitch.initializeDefaultAppClient(appId);\r\nconst mongodb = client.getServiceClient(\r\n    RemoteMongoClient.factory,\r\n    \"mongodb-atlas\"\r\n);\r\nexport const db = mongodb.db(\"APP\");\r\n","import React, {Component} from 'react'\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport {Stitch, RemoteMongoClient, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\nimport { ObjectId } from 'mongodb'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst Style = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500\r\n}\r\nvar greenIcon = new L.Icon({\r\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});\r\n\r\nvar myIcon = new L.divIcon({\r\n  className: 'my-div-icon',\r\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\r\n})\r\n\r\nconst floatStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\n\r\nclass MapView extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n      currentLocation: {lat: 45.51, lng:-122.68},\r\n      zoom: 13,\r\n      userLocation:[],\r\n      userLocationFound: false,\r\n      modules: [],\r\n      pins: [],\r\n    }\r\n\r\n  this.getpins = this.getpins.bind(this)\r\n  this.getUserPosition = this.getUserPosition.bind(this)\r\n  this.getDistance = this.getDistance.bind(this)\r\n  this.toRadian = this.toRadian.bind(this)\r\n  this.centerMap = this.centerMap.bind(this)\r\n\r\n  const appId = \"capstonear_app-xkqng\"\r\n  this.client = Stitch.hasAppClient(appId)\r\n  ? Stitch.getAppClient(appId)\r\n  : Stitch.initializeDefaultAppClient(appId)\r\n  const mongodb = this.client.getServiceClient(\r\n  RemoteMongoClient.factory,\r\n  \"mongodb-atlas\"\r\n  );\r\n  this.db = mongodb.db(\"APP\"); \r\n  }\r\n  \r\n\r\n  getUserPosition(){\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n      \r\n      console.log(this.state)\r\n      \r\n    })\r\n  \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserPosition()\r\n    this.getpins()\r\n    \r\n  }\r\n\r\n  //find distance between two points in meters. Returns true for less than meters or false if not\r\n  getDistance(origin, destination) {\r\n    var lon1 = this.toRadian(origin[1]);\r\n    var lat1 = this.toRadian(origin[0]);\r\n    var lon2 = this.toRadian(destination[1]);\r\n    var lat2 = this.toRadian(destination[0]);\r\n\r\n    var deltaLat = lat2 - lat1;\r\n    var deltaLon = lon2 - lon1;\r\n\r\n    var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\r\n    var c = 2 * Math.asin(Math.sqrt(a));\r\n    var EARTH_RADIUS = 6371;\r\n    var d = c * EARTH_RADIUS * 1000;\r\n\r\n    // 24000 meters ~ 15 miles\r\n    if(d < 24000)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  toRadian(degree) {\r\n    return degree*Math.PI/180;\r\n  }\r\n\r\n  async getpins() {\r\n    if(!this.client.auth.isLoggedIn){\r\n      return\r\n    }\r\n    await this.db.collection(\"MODULES\")\r\n      .find({\r\n        owner_id: { $ne: this.client.auth.authInfo.userId},\r\n        shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\r\n        public: true,\r\n        pins: { $ne: []},\r\n      })\r\n      .asArray()\r\n      .then((res) => {\r\n        this.setState({modules: res})\r\n        res = res.map(curr => {\r\n          curr = curr.pins[0];\r\n          return curr;\r\n        })\r\n        this.setState({pin_array: res})\r\n        console.log(\"Pin Array: \", res);\r\n        console.log(\"Modules: \", this.state.modules);\r\n      })\r\n\r\n    await this.db\r\n      .collection(\"PINS\")\r\n      .find({\r\n        _id: { $in: [...this.state.pin_array]}\r\n      })\r\n      .toArray()\r\n      .then((res) => {\r\n        res = res.map(curr => {\r\n          curr = curr.coords;\r\n          return curr;\r\n        })\r\n        console.log(\"Pins: \", res);\r\n        this.setState({ pins: res });\r\n      });\r\n\r\n    // limits pins to only those within specific miles of userlocation\r\n    var pins = [...this.state.pins];\r\n    var modules = [...this.state.modules];\r\n    for(var i = 0; i < this.state.pins.length; i++) {\r\n      if(!this.getDistance(this.state.userLocation, this.state.pins[i])) {\r\n        if(i !== -1)\r\n          delete pins[i];\r\n          delete modules[i];\r\n      }\r\n    }\r\n    this.setState({ pins: pins });\r\n    this.setState({ modules: modules});\r\n  }\r\n\r\n  centerMap(obj,coords)\r\n  {\r\n    const map = this.refs.map.leafletElement;\r\n    map.doubleClickZoom.disable();\r\n    setTimeout(function() {\r\n         map.doubleClickZoom.enable();\r\n    }, 1000);\r\n    map.setView(coords, 13);\r\n  }\r\n\r\n  render(){\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker position={this.state.userLocation} icon= {myIcon} >\r\n        <Popup >Your location</Popup>\r\n      </Marker>\r\n    ) : null\r\n\r\n    return (\r\n      <div id='leaflet-container'>\r\n      <Map ref='map' center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n        <TileLayer\r\n          \r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />\r\n        {userLocation}   \r\n        {this.state.pins.map((info,idx) => {\r\n            return <Marker \r\n              key = {idx} position={info} \r\n              icon= {new L.divIcon({\r\n                className: 'my-div-icon',\r\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>' \r\n              })} >\r\n              <Popup>\r\n                <h1>{this.state.modules[idx].title}</h1>\r\n                <p>{this.state.modules[idx].description}</p>\r\n                <p>{this.state.modules[idx].owner_name}</p>\r\n                <p>{this.state.modules[idx].owner_email}</p>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() =>\r\n                  window.location.assign(\"#/module/\" + this.state.modules[idx]._id)\r\n                  }\r\n                  >View Details</button>\r\n              </Popup>\r\n            </Marker>\r\n          })}  \r\n          <button style={floatStyle} onClick={()=>this.centerMap(this,this.state.userLocation)} >\r\n            <div><FontAwesomeIcon icon={faStreetView} size=\"3x\" /></div>\r\n          </button>\r\n      </Map>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default MapView;","export let userMode = true;\r\n\r\nexport function toggle_usermode() {\r\n    userMode = !userMode;\r\n    return userMode;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Stitch,\r\n    RemoteMongoClient,\r\n    GoogleRedirectCredential,\r\n} from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { db } from \"../clientdb\";\r\nimport styled from \"styled-components\";\r\nimport { userMode, toggle_usermode } from \"../mode\";\r\n \r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            useremail: \"\",\r\n            userID: \"\",\r\n            stitch_res: [],\r\n            menuOpen: this.props.open,\r\n            usermode: userMode, //usermode  true = viewer, false = creator\r\n        };\r\n\r\n        console.log(props);\r\n        const appId = \"capstonear_app-xkqng\";\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId);\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n            );\r\n            //select the db in our mongdb atlas cluster\r\n            this.db = mongodb.db(\"APP\");\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //init mongodb stitch\r\n\r\n        if (\r\n            this.client.auth.isLoggedIn &&\r\n            this.client.auth.authInfo.userProfile\r\n        ) {\r\n            const username = this.client.auth.authInfo.userProfile.data.first_name;\r\n            const userID = this.client.auth.authInfo.userId;\r\n            this.setState({\r\n                username,\r\n                userID,\r\n                useremail: this.client.auth.authInfo.userProfile.data.email,\r\n                userID: this.client.auth.authInfo.userId,\r\n                userImg: this.client.auth.authInfo.userProfile.data.picture,\r\n            });\r\n            db.collection(\"USERS\")\r\n                .findOne({ $and: [ { user_id: userID }, { username }] })\r\n                .then((data)=> {\r\n                    if(data) return;\r\n                    db.collection(\"USERS\")\r\n                        .findOneAndUpdate({ user_id: userID }, { $set: { username } })\r\n                })\r\n            console.log(this.client.auth.authInfo.userProfile.data);\r\n        }\r\n    }\r\n\r\n    //login button handler\r\n    async login() {\r\n        //login using google redirect\r\n        const credential = new GoogleRedirectCredential();\r\n        this.client.auth.loginWithRedirect(credential);\r\n        console.log(this.state);\r\n    }\r\n\r\n    addamodule() {\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne({\r\n                owner_id: this.state.userID,\r\n                name: this.state.temp_module_name,\r\n                owner: this.state.useremail,\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    listmymodules() {\r\n        if (!this.client.auth.isLoggedIn) {\r\n            return;\r\n        }\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .find({ _id: ObjectId(\"5ebed1bc5992681f357d7948\") })\r\n            .asArray()\r\n            .then((stitch_res) => {\r\n                this.setState({ stitch_res });\r\n                console.log(this.state.stitch_res[0]);\r\n            });\r\n    }\r\n\r\n    set_usermode() {\r\n        this.setState({usermode: toggle_usermode()})\r\n    }\r\n\r\n    render() {\r\n\r\n        //viewer menu\r\n        const viewrmenu = this.state.usermode ? (\r\n            <div>\r\n                <li>\r\n                <a href=\"#/modules/student\">View Modules</a>\r\n                </li>\r\n                <br />\r\n            </div>\r\n        ) : null\r\n\r\n        //creator menu\r\n\r\n        const creatormenu = this.state.usermode ? null : (\r\n            <div>\r\n                <li>\r\n                    <a href=\"#/modules/instructor\">View Modules</a>\r\n                </li>\r\n                <br />\r\n                <li>\r\n                    <a href=\"#/modules/edit\">Create Modules</a>\r\n                </li>\r\n                <br />\r\n            </div>\r\n        ) \r\n        return (\r\n            <StyledMenu\r\n                open={this.props.open}\r\n                setOpen={this.props.setOpen}\r\n                center_container={this.props.center_container}\r\n                style={{}}\r\n            >\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: \"2rem\",\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={this.state.userImg}\r\n                        alt=\"test\"\r\n                        style={{\r\n                            maxHeigh: \"80px\",\r\n                            maxWidth: \"80px\",\r\n                            borderRadius: \"50%\",\r\n                            top: \"1rem\",\r\n                        }}\r\n                    ></img>\r\n                    <div>\r\n                        <div className=\"radio\">\r\n                            <label>\r\n                                <input style={{\r\n                                    \r\n                                }} \r\n                                type=\"radio\" \r\n                                value=\"option1\" \r\n                                \r\n                                checked={this.state.usermode} \r\n                                onClick={()=>this.set_usermode()}\r\n                                />\r\n                                Student\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <label>\r\n                                <input type=\"radio\" value=\"option1\" checked={!this.state.usermode}\r\n                                onClick={()=>this.set_usermode()}\r\n                                />\r\n                                Instructor\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <p\r\n                        style={{\r\n                            fontSize: \"1.5rem\",\r\n                            top: \"4rem\",\r\n                            color: \"white\",\r\n                            zIndex: 1002,\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        Welcome, <br /> {this.state.username}{\" \"}\r\n                    </p>\r\n\r\n                </div>\r\n\r\n               \r\n                \r\n\r\n                <ul\r\n                    style={{ listStyleType: \"none\", paddingLeft: 0}}\r\n                    onClick={() => {\r\n                        this.props.center_container.center_container.current.style.opacity = 1;\r\n                        this.props.setOpen(!this.props.open);\r\n                    }}\r\n                >\r\n                    \r\n                    <li>\r\n                        <a href=\"#/\">Home</a>\r\n                    </li>\r\n                    <br />\r\n                    \r\n                    {viewrmenu}\r\n                    {creatormenu}\r\n\r\n                </ul>\r\n\r\n                <a\r\n                    href=\"#/logout\"\r\n                    onClick={() => {\r\n                        this.client.auth.logout()\r\n                            .then(() => {\r\n                                this.setState({\r\n                                    username: \"\",\r\n                                    useremail: \"\",\r\n                                    userID: \"\",\r\n                                });\r\n                                window.location.reload();\r\n                            })\r\n                    }}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        fontSize: \"1rem\",\r\n                        fontColor: \"#00000\",\r\n                        bottom: \"10rem\",\r\n                    }}\r\n                >\r\n                    Log Out\r\n                </a>\r\n            </StyledMenu>\r\n        );\r\n    }\r\n}\r\n\r\n// menu style sheet\r\n// tutorial from https://css-tricks.com/hamburger-menu-with-a-side-of-react-hooks-and-styled-components/ with modified styles\r\nconst StyledMenu = styled.nav`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background: #343a40;\r\n    transform: ${({ open }) =>\r\n        open ? \"translateX(-100)\" : \"translateX(100%)\"};\r\n    height: 100vh;\r\n    text-align: left;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    transition: transform 0.3s ease-in-out;\r\n    z-index: 1501;\r\n\r\n    @media (max-width: 150px) {\r\n        width: 100%;\r\n    }\r\n\r\n    a {\r\n        font-size: 1.5rem;\r\n        text-transform: uppercase;\r\n        padding: 2rem 0;\r\n        font-weight: Light;\r\n        letter-spacing: 0.5rem;\r\n        color: #FFFFF;\r\n        text-decoration: none;\r\n        transition: color 0.3s linear;\r\n\r\n        @media (max-width: 150px) {\r\n            font-size: 1rem;\r\n            text-align: center;\r\n        }\r\n\r\n        &:hover {\r\n            color: #343078;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Menu;\r\n","import React, {Component} from 'react'\r\nimport './Login.css'\r\nimport {Stitch, GoogleRedirectCredential} from \"mongodb-stitch-browser-sdk\"\r\n\r\nexport default class Login extends Component{\r\n    constructor(){\r\n        super()\r\n        const appId = \"capstonear_app-xkqng\"\r\n        this.client = Stitch.getAppClient(appId)\r\n        this.login = this.login.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n      if (this.client.auth.hasRedirectResult()) {\r\n        console.log(\"has results\")\r\n  \r\n        this.client.auth.handleRedirectResult().then(user => {\r\n          this.setState(\r\n            {\r\n              username: this.client.auth.authInfo.userProfile.data.name,\r\n              useremail: this.client.auth.authInfo.userProfile.data.email,\r\n              userID: this.client.auth.authInfo.userId,\r\n  \r\n            }\r\n          )\r\n          window.location.assign('#/')\r\n        }\r\n        )\r\n      }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    async login(){\r\n          \r\n          //login using google redirect\r\n          const credential = new GoogleRedirectCredential();\r\n          await this.client.auth.loginWithRedirect(credential);\r\n          console.log(this.state)\r\n          \r\n        \r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n          <div class=\"row justify-content-center\" style={{\r\n            position: \"fixed\",\r\n            margin: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            height: \"50px\"\r\n          }}>\r\n              <button class=\"btn btn-primary\"onClick={this.login}>Login with Google</button>\r\n          </div>\r\n      \r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Menu from './Menu'\r\n\r\n\r\nconst StyledBurger = styled.button`\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 1502;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background: ${({ open }) => open ? '#FFFFFF' : '#FFFFFF'};\r\n    border-radius: 10px;\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => open ? '0' : '1'};\r\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n  }\r\n`\r\n\r\nconst Burger = ({ open, setOpen, center_container }) => {\r\n  console.log(center_container.center_container.current)\r\n  return (\r\n    <StyledBurger open={open} onClick={() => {\r\n      setOpen(!open)\r\n      if(!open)\r\n        center_container.center_container.current.style.opacity = .5 \r\n      else\r\n        center_container.center_container.current.style.opacity = 1\r\n    }}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </StyledBurger>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst NavMenu = (center_container) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n        <Burger open={open} setOpen={setOpen} center_container={center_container} />\r\n        <Menu open={open} setOpen={setOpen} center_container={center_container}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavMenu","import React, { Component} from 'react'\r\n\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport {Container} from 'react-bootstrap'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport {Stitch,RemoteMongoClient,BSON} from \"mongodb-stitch-browser-sdk\"\r\nimport {AwsServiceClient, AwsRequest } from 'mongodb-stitch-browser-services-aws'\r\nimport {ObjectId} from 'mongodb'\r\n//const BSON = require('bson');\r\n\r\nexport default class Module extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            current_position:[],\r\n            module_info: {\r\n                name:'',\r\n                owner_email: '',\r\n                owner_id: '',\r\n                owner_name: '',\r\n                description: '',\r\n            },\r\n          \r\n            base64img:'',\r\n            user: {\r\n                _id: '',\r\n                user_id: '',\r\n                accessed_links: [],\r\n            },\r\n\r\n        }\r\n\r\n        this.getUserPosition = this.getUserPosition.bind(this)\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this)\r\n\r\n        this.update_user = this.update_user.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.getUserPosition()\r\n        this.fetch_userinfo()\r\n\r\n        const appId = \"capstonear_app-xkqng\"\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId)\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n              );\r\n              //select the db in our mongdb atlas cluster\r\n              this.db = mongodb.db(\"APP\");\r\n            console.log(\"client\")\r\n        }\r\n        else{\r\n            this.client = Stitch.initializeAppClient(appId)\r\n            console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    async fetch_userinfo(){\r\n        await this.db.collection(\"MODULES\").find({\r\n            _id: ObjectId(this.props.match.params.id)\r\n        })\r\n        .asArray()\r\n        .then((module_info) => {\r\n            if(module_info === undefined || module_info.length === 0)\r\n            {\r\n                console.log(module_info)\r\n                return\r\n            }\r\n            this.setState({module_info: module_info[0]}\r\n            )\r\n          console.log(module_info)\r\n        }\r\n        )\r\n        .catch((err) => {this.setState({error: err})\r\n         console.log(err)\r\n        }\r\n        )\r\n\r\n        const query = {\r\n            user_id: this.client.auth.authInfo.userId,\r\n        };\r\n        await this.db\r\n            .collection(\"USERS\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                console.log(\"User: \", res);\r\n\r\n                this.setState({ user: res });\r\n            })\r\n            .catch(console.error);\r\n\r\n        this.update_user();\r\n    }\r\n\r\n    getUserPosition(){\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          this.setState({ userLocation : [position.coords.latitude, position.coords.longitude], userLocationFound:true, currentLocation : [position.coords.latitude, position.coords.longitude]})\r\n          \r\n          console.log(this.state)\r\n          \r\n        })\r\n    }\r\n\r\n    update_user() {\r\n        if(\r\n            this.client.auth.authInfo.userId != this.state.module_info.owner_id && this.state.module_info.public == true && !this.state.module_info.shared_with.includes(this.client.auth.authInfo.userProfile.email)){\r\n            const query = {\r\n                _id: this.state.user._id,\r\n                user_id: this.client.auth.authInfo.userId,\r\n            };\r\n            const update = { $addToSet: { accessed_links: ObjectId(this.state.module_info._id) } };\r\n    \r\n            this.db\r\n                .collection(\"USERS\")\r\n                .findOneAndUpdate(query, update)\r\n                .then((res) => {\r\n                    console.log(\"Update response: \", res);\r\n                })\r\n                .catch(console.error);\r\n        }\r\n    }\r\n\r\n    renderMap(){\r\n        const userLocation = this.state.userLocationFound ? (\r\n            <Marker position={this.state.userLocation}>\r\n              <Popup >Your location</Popup>\r\n            </Marker>\r\n          ) : null\r\n\r\n        return (\r\n        <div id='leaflet-container'>\r\n        <Map center={this.state.currentLocation} zoom={13} maxZoom={18} >\r\n            <TileLayer\r\n            \r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n            {userLocation}     \r\n        </Map>\r\n        </div>\r\n        )   \r\n    }\r\n\r\n\r\n    fileToBase64 = (filename, filepath) => {\r\n        return new Promise(resolve => {\r\n          var file = new File([filename], filepath);\r\n          var reader = new FileReader();\r\n          // Read file content on file loaded event\r\n          reader.onload = function(event) {\r\n            resolve(event.target.result);\r\n          };\r\n          \r\n          // Convert data to base64 \r\n          reader.readAsDataURL(file);\r\n        });\r\n      };\r\n\r\n\r\n    render(){\r\n      \r\n        return(\r\n            <Container>\r\n                title: \r\n                <br />\r\n                {this.state.module_info.title}\r\n                <br />\r\n                <br />\r\n\r\n                owner_email: \r\n                <br />\r\n                {this.state.module_info.owner_email}\r\n                <br />\r\n                <br />\r\n\r\n                owner_name: \r\n                <br />\r\n                {this.state.module_info.owner_name}\r\n                <br />\r\n                <br />\r\n\r\n                owner_id: \r\n                <br />\r\n                {this.state.module_info.owner_id}\r\n                <br />\r\n                <br />\r\n\r\n                description: \r\n                <br />\r\n                {this.state.module_info.description}\r\n                <br />\r\n                <br />\r\n              \r\n             \r\n        \r\n\r\n                <button className='btn btn-primary' \r\n                        onClick={() =>\r\n                            window.location.assign(\r\n                                \"#/module/\" + this.state.module_info._id+\"/pins\"\r\n                        )}\r\n                        >start module</button>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Button,\r\n    Tabs,\r\n    Tab,\r\n    Modal,\r\n    FormControl,\r\n    FormGroup,\r\n} from \"react-bootstrap\";\r\nimport { List, arrayMove } from \"react-movable\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport \"./EditModule.css\";\r\n\r\nimport { EditForm } from \"./DropPin\";\r\n\r\n// @classdesc Used to make the Edit Module view.\r\nexport default class EditModule extends Component {\r\n    // Creates a new EditModule\r\n    // @param {Object} props\r\n    // @class\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            module_info: {\r\n                _id: \"\",\r\n                title: \"\",\r\n                owner_email: \"\",\r\n                owner_id: \"\",\r\n                owner_name: \"\",\r\n                description: \"\",\r\n                pins: [],\r\n                shared_with: [],\r\n                public: false,\r\n            },\r\n            email: \"\",\r\n            shared_with: [],\r\n            pins: [],\r\n            idx: -1,\r\n            ind: -1,\r\n            modal: null,\r\n            modal2: null,\r\n            copied: false,\r\n            link: \"\",\r\n        };\r\n\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\r\n\r\n        this.show_modal = this.show_modal.bind(this);\r\n        this.show_modal2 = this.show_modal2.bind(this);\r\n        this.hide_modal = this.hide_modal.bind(this);\r\n        this.hide_modal2 = this.hide_modal2.bind(this);\r\n        this.delete_pin_modal = this.delete_pin_modal.bind(this);\r\n        this.share_modal = this.share_modal.bind(this);\r\n        this.list_shared = this.list_shared.bind(this);\r\n        this.add_email = this.add_email.bind(this);\r\n        this.delete_email = this.delete_email.bind(this);\r\n        this.delete_email_modal = this.delete_email_modal.bind(this);\r\n        this.copy_clipboard = this.copy_clipboard.bind(this);\r\n\r\n        this.save_pin = this.save_pin.bind(this);\r\n        this.delete_pin = this.delete_pin.bind(this);\r\n        this.list_pins = this.list_pins.bind(this);\r\n        this.module_form = this.module_form.bind(this);\r\n        this.save_pin_order = this.save_pin_order.bind(this);\r\n        this.save_module = this.save_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.fetch_userinfo();\r\n    }\r\n\r\n    // Gets the module ID from the routing parameter and uses it to get the\r\n    // associated module and pins for that module.\r\n    // @return {Promise} Query to set state.module_info and state.pins\r\n    async fetch_userinfo() {\r\n        const query = {\r\n            _id: ObjectId(this.props.match.params.id),\r\n        };\r\n\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .findOne(query)\r\n            .then((res) => {\r\n                console.log(\"Module: \", res);\r\n                this.setState({ module_info: res });\r\n\r\n                // Pipeline to ensure that the order of the pins stays the same after the query\r\n                const pipeline = [\r\n                    { $match: { _id: { $in: res.pins } } },\r\n                    {\r\n                        $addFields: {\r\n                            __order: { $indexOfArray: [res.pins, \"$_id\"] },\r\n                        },\r\n                    },\r\n                    { $sort: { __order: 1 } },\r\n                ];\r\n\r\n                this.db\r\n                    .collection(\"PINS\")\r\n                    .aggregate(pipeline)\r\n                    .toArray()\r\n                    .then((res) => {\r\n                        console.log(\"Pins: \", res);\r\n                        this.setState({ pins: res });\r\n                    });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // copies textarea to clipboard and sets copy state\r\n    copy_clipboard() {\r\n        const e = this.textArea;\r\n        e.select();\r\n        document.execCommand(\"copy\");\r\n        this.setState({ copy: true });\r\n    }\r\n\r\n    // Sets state.modal to true\r\n    show_modal(id) {\r\n        this.setState({ modal: id });\r\n    }\r\n\r\n    // Sets state.modal2 to true\r\n    show_modal2(id) {\r\n        this.setState({ modal2: id });\r\n    }\r\n\r\n    // Sets state.modal to false\r\n    hide_modal() {\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    // Sets state.modal2 to false\r\n    hide_modal2() {\r\n        this.setState({ modal2: null });\r\n    }\r\n\r\n    // @return {JSX.Element} Modal to confirm deletion\r\n    delete_pin_modal() {\r\n        var modal_message;\r\n        if (this.state.idx < 0) modal_message = <p>Nothing to delete</p>;\r\n        else\r\n            modal_message = (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.pins[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n\r\n        return (\r\n            <Modal\r\n                // size=\"sm\"\r\n                show={this.state.modal === \"delete\"}\r\n                onHide={(e) => {\r\n                    this.hide_modal();\r\n                }}\r\n                style={{\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modal_message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            if (this.state.idx > -1)\r\n                                this.delete_pin(this.state.idx);\r\n                            this.hide_modal();\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.hide_modal();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // @return {JSX.Element} Modal to confirm deletion of email\r\n    delete_email_modal() {\r\n        var modal_message;\r\n        if (this.state.ind < 0) modal_message = <p>Nothing to delete</p>;\r\n        else\r\n            modal_message = (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.module_info.shared_with[this.state.ind]}</b>?\r\n                </p>\r\n            );\r\n\r\n        return (\r\n            <Modal\r\n                // size=\"sm\"\r\n                show={this.state.modal2 === \"delete_email\"}\r\n                onHide={(e) => {\r\n                    this.hide_modal2();\r\n                }}\r\n                style={{\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modal_message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={(e) => {\r\n                            if (this.state.ind > -1)\r\n                                this.delete_email(this.state.ind);\r\n                            this.hide_modal2();\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.hide_modal2();\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // This function adds a email to MODULES.shared_with and avoids duplicates\r\n    add_email() {\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $addToSet: { shared_with: this.state.email },\r\n        };\r\n        const options = { upsert: false, returnNewDocument: true };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                var shared_with = res.shared_with;\r\n                this.setState({ shared_with: shared_with });\r\n                this.setState({ module_info: res });\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // This function will remove a email from MODULES.shared_with\r\n    // @param {number} ind - The index of the email to delete\r\n    delete_email(ind) {\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $pull: { shared_with: this.state.shared_with[ind] },\r\n        };\r\n        const options = { multi: false, returnNewDocument: true };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                var shared_with = res.shared_with;\r\n                this.setState({ shared_with: shared_with, ind: -1 });\r\n                this.setState({ module_info: res });\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // Creates the list of emails in MODULES.shared_with\r\n    // @return {JSX.Element} The list of emails.\r\n    list_shared() {\r\n        return this.state.module_info.shared_with.map((module_info, ind) => {\r\n            return (\r\n                <div key={ind}>\r\n                    <Row form>\r\n                        <Col xs=\"8\">\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    plaintext\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    value={\r\n                                        this.state.module_info.shared_with[ind]\r\n                                    }\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.setState({ ind: ind });\r\n                                    this.show_modal2(\"delete_email\");\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {this.delete_email_modal()}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    // Modal to display MODULE.shared_with emails to allow adding and deleting\r\n    share_modal() {\r\n        return (\r\n            <Modal\r\n                sz=\"lg\"\r\n                show={this.state.modal === \"share\"}\r\n                onHide={(event) => {\r\n                    this.hide_modal();\r\n                }}\r\n                style={{\r\n                    maxHeight: \"100vh\",\r\n                    marginTop: \"50px\",\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>Shared With</Modal.Header>\r\n                <Modal.Body>\r\n                    <div\r\n                        style={{\r\n                            maxHeight: \"calc(100vh - 450px)\",\r\n                            overflowY: \"auto\",\r\n                            overflowX: \"hidden\",\r\n                        }}\r\n                    >\r\n                        {this.list_shared()}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer\r\n                    style={{\r\n                        maxHeight: \"calc(100vh - 450px)\",\r\n                        overflowY: \"auto\",\r\n                        overflowX: \"hidden\",\r\n                    }}\r\n                >\r\n                    <Form\r\n                        style={{\r\n                            position: \"relative\",\r\n                            margin: \"auto\",\r\n                        }}\r\n                    >\r\n                        <Form.Group>\r\n                            <FormControl\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={(e) => {\r\n                                    var email = this.state.email;\r\n                                    email = e.target.value;\r\n                                    this.setState({ email: email });\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    if (this.state.email !== \"\")\r\n                                        this.add_email();\r\n                                }}\r\n                            >\r\n                                Add\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                size=\"lg\"\r\n                                block\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.hide_modal();\r\n                                }}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Form.Group\r\n                                style={{\r\n                                    marginTop: \"15px\",\r\n                                }}\r\n                            >\r\n                                <textarea\r\n                                    ref={(textarea) =>\r\n                                        (this.textArea = textarea)\r\n                                    }\r\n                                    plaintext\r\n                                    readOnly\r\n                                    value={this.state.link}\r\n                                    placeholder=\"Sharing This Module Requires They Be Set To Public!\"\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        height: \"80px\",\r\n                                    }}\r\n                                />\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    block\r\n                                    onClick={(event) => {\r\n                                        event.preventDefault();\r\n                                        this.setState({\r\n                                            link:\r\n                                                window.location.origin +\r\n                                                window.location.pathname+\"/#/module/\" +\r\n                                                this.state.module_info._id,\r\n                                        });\r\n                                        this.copy_clipboard();\r\n                                    }}\r\n                                >\r\n                                    Copy Link\r\n                                </Button>\r\n                                {this.state.copy ? (\r\n                                    <div style={{ color: \"green\" }}>\r\n                                        Copied to clipboard!\r\n                                    </div>\r\n                                ) : null}\r\n                            </Form.Group>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    // @return {JSX.Element} Form to fill out module title, description, and\r\n    // public/private status\r\n    module_form() {\r\n        return (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                        type=\"title\"\r\n                        id=\"title\"\r\n                        value={this.state.module_info.title}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.title = e.target.value;\r\n                            this.setState({ module_info: module_info });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"5\"\r\n                        id=\"description\"\r\n                        value={this.state.module_info.description}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.description = e.target.value;\r\n                            this.setState({ module_info: module_info });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginBottom: \"0\",\r\n                    }}\r\n                >\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        label=\"Public\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"true\"\r\n                        checked={this.state.module_info.public}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.public = true;\r\n                            this.setState({\r\n                                module_info: module_info,\r\n                            });\r\n                        }}\r\n                    />\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        label=\"Private\"\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"false\"\r\n                        checked={!this.state.module_info.public}\r\n                        onChange={(e) => {\r\n                            var module_info = this.state.module_info;\r\n                            module_info.public = false;\r\n                            this.setState({\r\n                                module_info: module_info,\r\n                            });\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    // Creates the list of pins based on state.pins. Uses the react-movable\r\n    // library to make the list of pins draggable.\r\n    // @return {JSX.Element} The list of pins.\r\n    list_pins() {\r\n        return (\r\n            <List\r\n                values={this.state.pins}\r\n                onChange={({ oldIndex, newIndex }) => {\r\n                    var pins = this.state.pins;\r\n                    pins = arrayMove(pins, oldIndex, newIndex);\r\n                    this.setState({ pins: pins });\r\n                }}\r\n                renderList={({ children, props }) => (\r\n                    <ol\r\n                        {...props}\r\n                        style={{\r\n                            display: \"grid\",\r\n                            justifyContent: \"center\",\r\n                            paddingLeft: \"0px\",\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </ol>\r\n                )}\r\n                renderItem={({ index, props }) => (\r\n                    <li {...props}>\r\n                        <Row style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\r\n                            <Col\r\n                                xs=\"4\"\r\n                                style={{\r\n                                    marginTop: \"auto\",\r\n                                    marginBottom: \"auto\",\r\n                                }}\r\n                            >\r\n                                {this.state.pins[index].title}\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"link\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.setState({ idx: index });\r\n                                        this.show_modal(\"edit_pin_\" + index);\r\n                                    }}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"danger\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.setState({ idx: index });\r\n                                        this.show_modal(\"delete\");\r\n                                    }}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <EditForm\r\n                            pin={this.state.pins[index]}\r\n                            show={this.state.modal === \"edit_pin_\" + index}\r\n                            save={(pin) => {\r\n                                this.save_pin(pin);\r\n                            }}\r\n                            cancel={() => this.hide_modal()}\r\n                        />\r\n                    </li>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n\r\n    save_pin(pin) {\r\n        const query = { _id: pin._id };\r\n        const update = {\r\n            $set: pin,\r\n        };\r\n        // update a pin on the database\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .findOneAndUpdate(query, update)\r\n            .then((res) => {\r\n                console.log(\"Pin update response: \", res);\r\n\r\n                // Update pin list\r\n                var pins = this.state.pins;\r\n                pins[this.state.idx] = pin;\r\n                this.setState({ pins: pins });\r\n                this.hide_modal();\r\n            });\r\n    }\r\n\r\n    // This function will remove a pin from the DB and state.pins\r\n    // @param {number} idx - The index of the pin to delete\r\n    delete_pin(idx) {\r\n        const query = { _id: this.state.pins[idx]._id };\r\n        this.db\r\n            .collection(\"PINS\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update pin list\r\n                var pins = this.state.pins;\r\n                pins.splice(idx, 1);\r\n                this.setState({ pins: pins, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // Converts state.pins to a list of ObjectIDs, then updates\r\n    // state.module_info.pins based on the new list\r\n    save_pin_order() {\r\n        var module = this.state.module_info;\r\n        const pin_ids = this.state.pins.map((pin) => {\r\n            return pin._id;\r\n        });\r\n        module.pins = pin_ids;\r\n        this.setState({ module_info: module });\r\n    }\r\n\r\n    // Saves the module to the DB\r\n    save_module() {\r\n        this.save_pin_order();\r\n        const query = { _id: this.state.module_info._id };\r\n        const update = {\r\n            $set: this.state.module_info,\r\n        };\r\n        const options = { upsert: false };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .updateOne(query, update, options)\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n\r\n                // Go back to Manage Module view\r\n                window.location.assign(\"#/modules/edit/\");\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    // @return {JSX.Element} The EditModule componenet\r\n    render() {\r\n        return (\r\n            <Container\r\n                style={{\r\n                    marginTop: \"10px\",\r\n                    maxWidth: \"540px\",\r\n                    height:\"100vh\",\r\n\r\n                }}\r\n            >\r\n                <Form style={{ height: \"100%\" }}>\r\n                    <Tabs\r\n                        defaultActiveKey=\"Module Info\"\r\n                        transition={false}\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Tab eventKey=\"Module Info\" title=\"Module Info\">\r\n                            {this.module_form()}\r\n                                <Form.Group>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        var id = this.state.module_info._id;\r\n                                        window.location.assign(\r\n                                            \"#/module/\" + id + \"/pins/edit\"\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    Pin Map\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        this.save_module();\r\n                                    }}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.show_modal(\"share\");\r\n                            }}\r\n                        >\r\n                            Share\r\n                        </Button>\r\n                    </Form.Group>\r\n                        </Tab>\r\n                        <Tab\r\n                            eventKey=\"Pins\"\r\n                            title=\"Pins\"\r\n                            style={{ height: \"100%\" }}\r\n                        >\r\n                            {this.list_pins()}\r\n                        </Tab>\r\n                    </Tabs>\r\n\r\n                    <Form.Group>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                var id = this.state.module_info._id;\r\n                                window.location.assign(\r\n                                    \"#/module/\" + id + \"/pins/edit\"\r\n                                );\r\n                            }}\r\n                        >\r\n                            Pin Map\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.save_module();\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            size=\"lg\"\r\n                            block\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.show_modal(\"share\");\r\n                            }}\r\n                        >\r\n                            Share\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n                {this.delete_pin_modal()}\r\n                {this.share_modal()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Tab, Tabs, CardDeck, Form, Button } from \"react-bootstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { waitForElementToBeRemoved } from \"@testing-library/react\";\r\n//import {AwsServiceClient, AwsRequest} from 'mongodb-stitch-browser-services-aws'\r\n\r\nexport default class ViewModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            my_modules: [],\r\n            shared_modules: [],\r\n            img1: \"\",\r\n            stitch_res: [],\r\n            user: {\r\n                _id: '',\r\n                user_id: '',\r\n                accessed_links: [],\r\n            },\r\n            accessed_modules: [],\r\n        };\r\n        this.module_results = null;\r\n        \r\n\r\n        //refs\r\n        this.goto_module_id = React.createRef();\r\n\r\n        this.add_module_cards = this.add_module_cards.bind(this);\r\n        this.fetch_modules = this.fetch_modules.bind(this);\r\n        this.goto_module = this.goto_module.bind(this);\r\n\r\n        const appId = \"capstonear_app-xkqng\";\r\n        if (Stitch.hasAppClient(appId)) {\r\n            this.client = Stitch.getAppClient(appId);\r\n            const mongodb = this.client.getServiceClient(\r\n                RemoteMongoClient.factory,\r\n                \"mongodb-atlas\"\r\n            );\r\n            //select the db in our mongdb atlas cluster\r\n            this.db = mongodb.db(\"APP\");\r\n        } else {\r\n            this.client = Stitch.initializeAppClient(appId);\r\n            //console.log(\"client init\")\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetch_modules();\r\n\r\n    }\r\n\r\n    async fetch_modules() {\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                owner_id: this.client.auth.authInfo.userId,\r\n            })\r\n            .asArray()\r\n            .then((my_modules) => {\r\n                this.setState({\r\n                    my_modules: my_modules,\r\n                    modules: {\r\n                        0: my_modules,\r\n                        1: this.state.shared_modules,\r\n                        2: this.state.accessed_modules,\r\n                    },\r\n                });\r\n\r\n                console.log(this.state.my_modules);\r\n            });\r\n\r\n        //fetch shared modules\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                shared_with: this.client.auth.authInfo.userProfile.data.email,\r\n            })\r\n            .asArray()\r\n            .then((shared_modules) => {\r\n                this.setState({\r\n                    shared_modules: shared_modules,\r\n                    modules: {\r\n                        0: this.state.my_modules,\r\n                        1: shared_modules,\r\n                        2: this.state.accessed_modules,\r\n                    },\r\n                });\r\n                console.log(shared_modules);\r\n            });\r\n        console.log(this.state.modules);\r\n\r\n        // fetch user collection, create new if not found\r\n        const query = {\r\n            user_id: this.client.auth.authInfo.userId,\r\n        };\r\n        const update = {\r\n            $setOnInsert: {accessed_links: [],}\r\n        };\r\n        const options = {\r\n            returnNewDocument: true,\r\n            upsert: true,\r\n        };\r\n        await this.db\r\n            .collection(\"USERS\")\r\n            .findOneAndUpdate(query, update, options)\r\n            .then((res) => {\r\n                console.log(\"User: \", res);\r\n                this.setState({ user: res });\r\n            })\r\n            .catch(console.error);\r\n\r\n        // fetch accessed links and set accessed modules\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find({\r\n                shared_with: { $ne: this.client.auth.authInfo.userProfile.data.email},\r\n                _id: { $in: [...this.state.user.accessed_links]},\r\n                public: true,\r\n            })\r\n            .asArray()\r\n            .then((accessed_modules) => {\r\n                this.setState({\r\n                    accessed_modules: accessed_modules,\r\n                    modules: {\r\n                        0: this.state.my_modules,\r\n                        1: this.state.shared_modules,\r\n                        2: accessed_modules,\r\n                    },\r\n                });\r\n                console.log(\"Accessed: \",accessed_modules);\r\n            });\r\n        console.log(this.state.accessed_modules);\r\n    }\r\n\r\n    goto_module(id) {\r\n        window.location.assign(\"#/module/\" + id);\r\n    }\r\n\r\n    module_card (module, idx) {\r\n        const userid = this.state.user.user_id; \r\n        return (\r\n            <div className=\"col-md-6 col-lg-4 \" key={idx}>\r\n                <Card\r\n                    className=\"h-100\"\r\n                    style={{\r\n                        display: \"fixed\",\r\n                        Width: \"25rem\",\r\n                        margin: \"0.25rem\",\r\n                        justifyContent: \"center\",\r\n                        textAlign: \"center\",\r\n                    }}\r\n                >\r\n                    <Card.Body>\r\n                        <Card.Img\r\n                            variant=\"top\"\r\n                            src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + module.pins[0] + \".jpeg?versionid=latest&date=\" + Date.now()}\r\n                        />\r\n                        <Card.Title>{module.title}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">\r\n                            by {module.owner_name} ({module.owner_email})\r\n                        </Card.Subtitle>\r\n                        <Card.Text>{module.description}</Card.Text>\r\n                        <div\r\n                            className=\"btn-toolbar\"\r\n                            style={{\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <div className=\"btn-group mr-1\" style={{paddingTop: \"10px\"}}>\r\n                                <button\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={() => window.location.assign(`#/module/${module._id}`)}\r\n                                >\r\n                                    View Details\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"btn-group mr-1\" style={{paddingTop: \"10px\"}}>\r\n                                <button className=\"btn btn-primary\"\r\n                                    onClick={() =>{\r\n                                        window.location.assign(`#/module/${module._id}/pins/?user=${userid}`)\r\n                                    }\r\n                                }>\r\n                                    Start Module\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    add_module_cards(type) {\r\n        if (this.state.modules.length === 0) return;\r\n        console.log(this.state.modules[type])\r\n        const mds = this.state.modules[type].map(this.module_card, this);\r\n        return (\r\n            <div\r\n                style={{\r\n                    top: \"50px\",\r\n                    bottom: \"0px\",\r\n                    position: \"relative\",\r\n                }}\r\n                className=\"container\"\r\n            >\r\n                <CardDeck\r\n                    style={{\r\n                        top: \"50px\",\r\n                    }}\r\n                >\r\n                    {mds}\r\n                </CardDeck>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const url =this.props.location.pathname\r\n        var defaultTab= null\r\n        var my_modules_tab=null\r\n        if(url==\"/modules/student\")\r\n        {\r\n            defaultTab=\"Shared Modules\"\r\n        }\r\n        else\r\n        {\r\n            defaultTab=\"My Modules\"\r\n            my_modules_tab= (<Tab eventKey=\"My Modules\" title=\"My Modules\">\r\n                                {this.add_module_cards(0)}\r\n                            </Tab>)\r\n        }\r\n\r\n        const query_modules = () => {\r\n            const userQuery = this.goto_module_id.current.value;\r\n            try {\r\n                ObjectId(userQuery);\r\n                window.location.assign(`#/module/${userQuery}`);\r\n            }\r\n            catch (err) {\r\n                this.db.collection(\"MODULES\")\r\n                    .find({ title: { $regex: userQuery, $options: \"i\" } })\r\n                    .asArray()\r\n                    .then(docs => {\r\n                        this.module_results = docs.map(this.module_card, this);\r\n                        this.forceUpdate();\r\n                    });\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: \"0px\",\r\n                    bottom: \"0px\",\r\n                    width: \"100%\",\r\n                    overflowY: \"scroll\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        top: \"10px\",\r\n                        bottom: '0px',\r\n                        position: \"relative\",\r\n                        height: \"100vh\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                    }}\r\n                >\r\n                    <Tabs\r\n                        defaultActiveKey= {defaultTab}\r\n                        transition={false}\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        {my_modules_tab}\r\n                        <Tab eventKey=\"Shared Modules\" title=\"Shared with me\">\r\n                            <div>\r\n                                {this.add_module_cards(1)}\r\n                            </div>\r\n                            <div>\r\n                                {this.add_module_cards(2)}\r\n                            </div>\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"Go To\" title=\"Search\">\r\n                            <Form\r\n                                onSubmit={e => {\r\n                                    e.preventDefault();\r\n                                    query_modules();\r\n                                }}\r\n                            >\r\n                                <Form.Group controlId=\"formModuleId\">\r\n                                    <Form.Label>Module</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"string\"\r\n                                        placeholder=\"Enter module title or id\"\r\n                                        ref={this.goto_module_id}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    style={{marginBottom: \"10px\"}}\r\n                                    onClick={query_modules}\r\n                                >\r\n                                    Search\r\n                                </Button>\r\n                            </Form>\r\n                            {this.module_results}\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Stitch, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\r\n\r\nexport default class ManageModules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [],\r\n            modal: false,\r\n            idx: -1,\r\n        };\r\n\r\n        this.fetch_userinfo = this.fetch_userinfo.bind(this);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.modal_message = this.modal_message.bind(this);\r\n        this.list_modules = this.list_modules.bind(this);\r\n        this.delete_module = this.delete_module.bind(this);\r\n        this.add_module = this.add_module.bind(this);\r\n        this.save_modules = this.save_modules.bind(this);\r\n\r\n        // Setting up DB with Stitch\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const mongodb = this.client.getServiceClient(\r\n            RemoteMongoClient.factory,\r\n            \"mongodb-atlas\"\r\n        );\r\n        this.db = mongodb.db(\"APP\");\r\n\r\n        this.fetch_userinfo();\r\n    }\r\n\r\n    async fetch_userinfo() {\r\n        const query = {\r\n            owner_id: this.client.auth.authInfo.userId,\r\n        };\r\n        await this.db\r\n            .collection(\"MODULES\")\r\n            .find(query)\r\n            .toArray()\r\n            .then((res) => {\r\n                console.log(\"Modules loaded: \", res);\r\n\r\n                this.setState({ modules: res });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    toggle() {\r\n        var modal = !this.state.modal;\r\n        this.setState({ modal: modal });\r\n    }\r\n\r\n    modal_message() {\r\n        if (this.state.idx < 0) return <p>Nothing to delete</p>;\r\n        else\r\n            return (\r\n                <p>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <b>{this.state.modules[this.state.idx].title}</b>?\r\n                </p>\r\n            );\r\n    }\r\n\r\n    list_modules() {\r\n        return this.state.modules.map((module, idx) => {\r\n            return (\r\n                <div key={idx} className=\"pt-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 offset-sm-2 col-sm-4\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.modules[idx].title}\r\n                                onChange={(event) => {\r\n                                    event.preventDefault();\r\n\r\n                                    var modules = [...this.state.modules];\r\n                                    modules[idx].title = event.target.value;\r\n                                    this.setState({ modules });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 col-sm-4\">\r\n                            <button\r\n                                className=\"btn btn-link float-right\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    var id = this.state.modules[idx]._id;\r\n                                    window.location.assign(\r\n                                        \"#/module/\" + id + \"/edit\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger float-right\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.setState({ idx: idx });\r\n                                    this.toggle();\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    delete_module(idx) {\r\n        const query = { _id: this.state.modules[idx]._id };\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .deleteOne(query)\r\n            .then((res) => {\r\n                console.log(\"Delete response: \", res);\r\n\r\n                // Update module list\r\n                var modules = [...this.state.modules];\r\n                modules.splice(idx, 1);\r\n                this.setState({ modules: modules, idx: -1 });\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    add_module() {\r\n        const query = {\r\n            title: \"title\",\r\n            owner_id: this.client.auth.authInfo.userId,\r\n            owner_name: this.client.auth.authInfo.userProfile.name,\r\n            owner_email: this.client.auth.authInfo.userProfile.email,\r\n            description: \"\",\r\n            pins: [],\r\n            shared_with: [],\r\n            public: false,\r\n        };\r\n\r\n        this.db\r\n            .collection(\"MODULES\")\r\n            .insertOne(query)\r\n            .then((res) => {\r\n                console.log(\"Add response: \", res);\r\n\r\n                // Navigate to Edit Module view\r\n                var id = res.insertedId;\r\n                window.location.assign(\"#/module/\" + id + \"/edit\");\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    save_modules() {\r\n        Promise.all(\r\n            this.state.modules.map((module) => {\r\n                const query = { _id: module._id };\r\n                const update = {\r\n                    $set: {\r\n                        title: module.title,\r\n                    },\r\n                };\r\n                const options = { upsert: false };\r\n\r\n                return this.db\r\n                    .collection(\"MODULES\")\r\n                    .updateOne(query, update, options);\r\n            })\r\n        )\r\n            .then((res) => {\r\n                console.log(\"Save response: \", res);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form\r\n                    style={{ height: \"100%\" }}\r\n                    onSubmit={(event) => {\r\n                        event.preventDefault();\r\n                        this.save_modules();\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            height: \"70vh\",\r\n                            overflowY: \"scroll\",\r\n                            overflowX: \"hidden\"\r\n                        }}\r\n                    >\r\n                        {this.list_modules()}\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: \"10px\" }}>\r\n                        <button\r\n                            className=\"btn btn-primary btn-lg btn-block\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.add_module();\r\n                            }}\r\n                        >\r\n                            Add Module\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-secondary btn-lg btn-block\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.save_modules();\r\n                                window.location.assign(\"#/\");\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <Modal\r\n                    show={this.state.modal}\r\n                    toggle={(event) => {\r\n                        event.preventDefault();\r\n                        this.toggle();\r\n                    }}\r\n                    style={{\r\n                        marginTop: \"50px\",\r\n                    }}\r\n                >\r\n                    <Modal.Header\r\n                        toggle={(event) => {\r\n                            event.preventDefault();\r\n                            this.toggle();\r\n                        }}\r\n                    >\r\n                        Confirm Deletion\r\n                    </Modal.Header>\r\n                    <Modal.Body>{this.modal_message()}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                if (this.state.idx > -1)\r\n                                    this.delete_module(this.state.idx);\r\n                                this.toggle();\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </button>{\" \"}\r\n                        <button\r\n                            className=\"btn btn-secondary\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                this.toggle();\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Map, Marker, Popup, TileLayer, Polyline } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport { Stitch, RemoteMongoClient, GoogleRedirectCredential } from \"mongodb-stitch-browser-sdk\"\r\nimport { ObjectId } from 'mongodb'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleRight, faArrowAltCircleLeft, faMapMarkerAlt, faStreetView } from '@fortawesome/free-solid-svg-icons'\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap'\r\nimport { userMode } from './mode'\r\nimport { FacebookShareButton, FacebookIcon } from 'react-share'\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\n\r\nvar myIcon = new L.divIcon({\r\n  className: 'my-div-icon',\r\n  html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png\"/>'\r\n})\r\n\r\nconst floatStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"40px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\nconst nextButtonStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"120px\",\r\n  backgroundColor: \"#74E4E9\",\r\n  color: \"#000000\",\r\n  borderRadius: \"40px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\nconst previousButtonStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"240px\",\r\n  backgroundColor: \"#74E4E9\",\r\n  color: \"#000000\",\r\n  borderRadius: \"40px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\nconst currentButtonStyle = {\r\n  position: \"fixed\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  bottom: \"40px\",\r\n  right: \"180px\",\r\n  backgroundColor: \"#0C9\",\r\n  color: \"#FFF\",\r\n  borderRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  boxShadow: \"2px 2px 3px #999\",\r\n  zIndex: 1500,\r\n};\r\n\r\nclass ViewPinOnMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      currentLocation: { lat: 45.51, lng: -122.68 },\r\n      zoom: 13,\r\n      userLocation: [],\r\n      userLocationFound: false,\r\n      username: \"\",\r\n      useremail: \"\",\r\n      userID: \"\",\r\n      stitch_res: {},\r\n      pin: [],\r\n      pins_line: [],\r\n      pins_array: [],\r\n      current_pin_index: 0,\r\n      finish_modal: false,\r\n    }\r\n    this.bounds = undefined;\r\n    this.userID = this.props.location.search.split(\"user=\")[1];\r\n    this.shareUrl = `${window.location.host}${window.location.pathname}#/completed/${this.props.match.params.id}/${this.userID}`;\r\n    console.log(\"the share url\", this.shareUrl);\r\n\r\n    const appId = \"capstonear_app-xkqng\"\r\n    this.client = Stitch.hasAppClient(appId)\r\n      ? Stitch.getAppClient(appId)\r\n      : Stitch.initializeDefaultAppClient(appId)\r\n    const mongodb = this.client.getServiceClient(\r\n      RemoteMongoClient.factory,\r\n      \"mongodb-atlas\"\r\n    );\r\n    this.db = mongodb.db(\"APP\");\r\n  }\r\n\r\n\r\n  getUserPosition() {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({ userLocation: [position.coords.latitude, position.coords.longitude], userLocationFound: true, currentLocation: [position.coords.latitude, position.coords.longitude] })\r\n    })\r\n\r\n  }\r\n\r\n  boundingRect(coords) {\r\n    return coords\r\n      .reduce((acc, curr) => {\r\n        const [lat, lng] = curr;\r\n        acc[0][0] = lat < acc[0][0] ? lat : acc[0][0];\r\n        acc[0][1] = lng < acc[0][1] ? lng : acc[0][1];\r\n        acc[1][0] = lat > acc[1][0] ? lat : acc[1][0];\r\n        acc[1][1] = lng > acc[1][1] ? lng : acc[1][1];\r\n        return acc;\r\n      }, [[90, 180], [-90, -180]]);\r\n  }\r\n\r\n  AddPaddingToRect(rect, percent = 0.10) {\r\n    const [latMin, lngMin] = rect[0];\r\n    const [latMax, lngMax] = rect[1];\r\n    const lngPad = (lngMax - lngMin) * percent;\r\n    const latPad = (latMax - latMin) * percent;\r\n    return [\r\n      [latMin - latPad, lngMin - lngPad],\r\n      [latMax + latPad, lngMax + lngPad]\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserPosition()\r\n    this.drawpins()\r\n  }\r\n\r\n  async drawpins() {\r\n    if (!this.client.auth.isLoggedIn) {\r\n      return\r\n    }\r\n    const query = { _id: ObjectId(this.props.match.params.id) };\r\n    await this.db.collection(\"MODULES\").findOne(query)\r\n      .then((stitch_res) => {\r\n        this.setState({ stitch_res })\r\n        const pipeline = [\r\n          { $match: { _id: { $in: stitch_res.pins } } },\r\n          {\r\n            $addFields: {\r\n              __order: { $indexOfArray: [stitch_res.pins, \"$_id\"] },\r\n            },\r\n          },\r\n          { $sort: { __order: 1 } },\r\n        ];\r\n        this.db.collection(\"PINS\").aggregate(pipeline)\r\n          .toArray()\r\n          .then((res) => {\r\n            this.bounds = this.AddPaddingToRect(\r\n              this.boundingRect([...res.map(elem => elem.coords), this.state.currentLocation]));\r\n            this.setState({ pins_array: res })\r\n          });\r\n\r\n      }\r\n      )\r\n  }\r\n  drawlines() {\r\n\r\n    if (this.state.pins_line.length > 0) {\r\n      return (\r\n        <Polyline positions={this.state.pins_line} color={'red'}>\r\n        </Polyline>\r\n      )\r\n    }\r\n    return\r\n  }\r\n  openGoogle(coords) {\r\n    var url = \"http://maps.google.com?q=\" + coords[0] + \",\" + coords[1]\r\n    var win = window.open(url, '_blank');\r\n    return\r\n  }\r\n  centerMap(obj, coords) {\r\n    const map = this.refs.map.leafletElement\r\n    map.doubleClickZoom.disable();\r\n    setTimeout(function () {\r\n      map.doubleClickZoom.enable();\r\n    }, 1000);\r\n    map.setView(coords, 13)\r\n    const pin = this.refs.userloc.leafletElement\r\n    pin.openPopup()\r\n  }\r\n  nextPin() {\r\n    const map = this.refs.map.leafletElement\r\n    map.doubleClickZoom.disable();\r\n    setTimeout(function () {\r\n      map.doubleClickZoom.enable();\r\n    }, 1000);\r\n    var temp = this.state.current_pin_index + 1\r\n    if (temp >= this.state.pins_array.length - 1) {\r\n      temp = this.state.pins_array.length - 1\r\n    }\r\n    console.log(\"current pin index\", this.state.current_pin_index)\r\n    map.setView(this.state.pins_array[temp].coords, 13)\r\n    const pin = this.refs[temp].leafletElement\r\n    pin.openPopup()\r\n    this.setState({ current_pin_index: temp })\r\n  }\r\n  previousPin() {\r\n    const map = this.refs.map.leafletElement\r\n    map.doubleClickZoom.disable();\r\n    setTimeout(function () {\r\n      map.doubleClickZoom.enable();\r\n    }, 1000);\r\n    var temp = this.state.current_pin_index - 1\r\n    if (temp <= 0) {\r\n      temp = 0\r\n    }\r\n    map.setView(this.state.pins_array[temp].coords, 13)\r\n    const pin = this.refs[temp].leafletElement\r\n    pin.openPopup()\r\n    this.setState({ current_pin_index: temp })\r\n  }\r\n  currentPin() {\r\n    const map = this.refs.map.leafletElement\r\n    map.doubleClickZoom.disable();\r\n    setTimeout(function () {\r\n      map.doubleClickZoom.enable();\r\n    }, 1000);\r\n    map.setView(this.state.pins_array[this.state.current_pin_index].coords)\r\n  }\r\n  toggle_modal() {\r\n    var finish_modal = !this.state.finish_modal\r\n    this.setState({finish_modal: finish_modal})\r\n  }\r\n  go_home(){\r\n    if(userMode== true)\r\n    {\r\n      window.location.assign(\r\n        \"#/modules/student\");\r\n    }\r\n    else\r\n    {\r\n      window.location.assign(\r\n        \"#/modules/instructor\");\r\n    }\r\n  }\r\n  finish_modal() {\r\n    return (\r\n      <Modal\r\n        show={this.state.finish_modal}\r\n        onHide={() => this.toggle_modal()}\r\n        style={{\r\n          marginTop: \"50px\",\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Finish Module</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          You finished {this.state.stitch_res.title}\r\n          <FacebookShareButton\r\n            quote={\"title\"}\r\n            url={this.shareUrl}\r\n          >\r\n            <FacebookIcon />\r\n          </FacebookShareButton>\r\n          <Form style={{\r\n            position: \"relative\",\r\n            margin: \"auto\",\r\n          }}\r\n          >\r\n            <Form.Group>\r\n              {/* <Button block onClick ={() => FacebookShareButton()}>Share</Button> */}\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Button block>Scan QR</Button>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Button block onClick={() => this.go_home()}>End Module</Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => this.toggle_modal()}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>)\r\n  }\r\n  render() {\r\n    const userLocation = this.state.userLocationFound ? (\r\n      <Marker ref='userloc' position={this.state.userLocation} icon={myIcon} >\r\n        <Popup>You are here</Popup>\r\n      </Marker>\r\n    ) : null\r\n\r\n    return (\r\n      <div>\r\n        <Map ref='map' center={this.state.currentLocation} zoom={13} maxZoom={18}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n          />\r\n          {userLocation}\r\n\r\n          {this.state.pins_array.map((info, idx) => {\r\n            const len = this.state.pins_array.length;\r\n            var marker_icon;\r\n            if (idx == this.state.current_pin_index) {\r\n              marker_icon = new L.divIcon({\r\n                className: 'my-div-icon',\r\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png\"/>'\r\n              })\r\n            }\r\n            else {\r\n              marker_icon = new L.divIcon({\r\n                className: 'my-div-icon',\r\n                html: '<img class=\"my-div-image\" src=\"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png\"/>'\r\n              })\r\n            }\r\n            return <Marker\r\n              key={idx} position={info.coords}\r\n              icon={marker_icon}\r\n              ref={idx}  >\r\n              <Popup >\r\n                <h1>{info.title}</h1>\r\n                <p>{info.description}</p>\r\n                <p>{info.hint}</p>\r\n                <p>{info.destination}</p>\r\n                <img style={{\r\n                  height: 'auto',\r\n                  width: '100%'\r\n                }} src={\"https://capstoneusercontent.s3-us-west-2.amazonaws.com/\" + info._id.toString() + \".jpeg?versionid=latest&date=\" + Date.now()}></img>\r\n                <Form style={{ paddingTop: \"10px\" }}>\r\n                  {\r\n                    (() => {\r\n                      if (idx === len - 1)\r\n                        return (\r\n                          <Form.Group>\r\n                            <Button onClick={() => this.toggle_modal()} block>\r\n                              Finish Module\r\n                            </Button>\r\n                          </Form.Group>)\r\n                    })()\r\n                  }\r\n                  <Form.Group>\r\n                    <Button onClick={() => this.openGoogle(info.coords)} variant=\"secondary\" block>\r\n                      Open Google Map\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Popup>\r\n            </Marker>\r\n\r\n          })}\r\n          <button style={floatStyle} onClick={() => this.centerMap(this, this.state.currentLocation)} >\r\n            <div><FontAwesomeIcon icon={faStreetView} size=\"3x\" /></div>\r\n          </button>\r\n          <ButtonGroup>\r\n            <button style={nextButtonStyle} onClick={() => this.nextPin()}  >\r\n              <div><FontAwesomeIcon icon={faArrowAltCircleRight} size=\"3x\" /></div>\r\n            </button>\r\n            <button style={previousButtonStyle} onClick={() => this.previousPin()} >\r\n              <div><FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"3x\" /></div>\r\n            </button>\r\n            <button style={currentButtonStyle} onClick={() => this.currentPin()} >\r\n              <div><FontAwesomeIcon icon={faMapMarkerAlt} size=\"3x\" /></div>\r\n            </button>\r\n          </ButtonGroup>\r\n        </Map>\r\n        {this.finish_modal()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewPinOnMap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"./clientdb\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ObjectId } from \"mongodb\";\r\n\r\nconst imgSrc = pin => `https://capstoneusercontent.s3-us-west-2.amazonaws.com/${pin}.jpeg?versionid=latest`;\r\n\r\nconst Completed = props => {\r\n    const [ pin, setPin ] = useState();\r\n    const [ username, setUsername ] = useState(\"User\");\r\n    const { module, userid } = useParams();\r\n    useEffect(() => {\r\n        db.collection(\"MODULES\")\r\n            .findOne({ _id: ObjectId(module) })\r\n            .then(data => setPin(data.pins[0]))\r\n        db.collection(\"USERS\")\r\n            .findOne({ user_id: userid })\r\n            .then(data => setUsername(data?.username || username))\r\n    }\r\n    , []);\r\n    return (\r\n        <div \r\n            className=\"container\"\r\n            style={{\r\n                display: \"block\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                textAlign: \"center\"\r\n            }}\r\n        >\r\n            <h1> {`${username} has completed this module`} </h1>\r\n            <img src={imgSrc(pin)} style={{ width: \"90%\" }} />\r\n        </div>\r\n    );\r\n}\r\nexport default Completed;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport MapView from \"./components/MapView.js\";\r\nimport Menu from \"./components/Menu/Menu.js\";\r\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\r\nimport Login from \"./components/Login\";\r\nimport DropPin from \"./components/DropPin\";\r\nimport NavMenu from \"./components/Menu/NavMenu\";\r\nimport Module from \"./components/Module\";\r\nimport EditModule from \"./components/EditModule\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport ViewModules from \"./components/ViewModules\";\r\nimport ManageModules from \"./components/ManageModules\";\r\nimport ViewPinOnMap from \"./components/ViewPinOnMap\";\r\nimport Completed from \"./components/completed\";\r\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const appId = \"capstonear_app-xkqng\";\r\n        this.client = Stitch.hasAppClient(appId)\r\n            ? Stitch.getAppClient(appId)\r\n            : Stitch.initializeDefaultAppClient(appId);\r\n        const url = window.location.href;\r\n        const cleanUrl = url.split(/\\?fbclid=.*#/).join(\"#\");\r\n        if (this.client.auth.hasRedirectResult()) {\r\n            if (cleanUrl !== url)\r\n                window.location.assign(cleanUrl);\r\n            this.client.auth.handleRedirectResult().then((user) => {\r\n                window.location.assign(\"/\");\r\n            });\r\n        }\r\n        if (cleanUrl !== url)\r\n            window.location.assign(cleanUrl);\r\n        this.state = {\r\n            isLoggedIn: false,\r\n        };\r\n\r\n        //refs\r\n\r\n        this.center_container = React.createRef();\r\n\r\n        this.NavMenu = this.NavMenu.bind(this);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleStitchClient() {\r\n        this.setState({\r\n            stitchClient: this.client,\r\n            userProfile: this.client.auth.userProfile,\r\n            isLoggedIn: true,\r\n        });\r\n    }\r\n\r\n    Home = () => {\r\n        if (this.client.auth.isLoggedIn) {\r\n            return (\r\n                <div>\r\n                    <MapView />\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Login />;\r\n        }\r\n    };\r\n\r\n    NavMenu = () => {\r\n        if (this.client.auth.isLoggedIn) {\r\n            return <NavMenu center_container={this.center_container} />;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter basename=\"/\">\r\n                <div>\r\n                    <Navbar\r\n                        className=\"navbar bg-dark navbar-dark\"\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            width: \"100%\",\r\n                            height: \"50px\",\r\n                            zIndex: 1500,\r\n                        }}\r\n                    >\r\n                        <Navbar.Brand href=\"#/\">Context AR</Navbar.Brand>\r\n                    </Navbar>\r\n                    {this.NavMenu()}\r\n                </div>\r\n\r\n                <div\r\n                    ref={this.center_container}\r\n                    className=\"center_container\"\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: \"50px\",\r\n                        bottom: \"0\",\r\n                        width: \"100%\",\r\n                        height: \"calc(100% - 50px)\",\r\n                    }}\r\n                >\r\n                    <Switch>\r\n                        <Route exact path=\"/menu\" component={Menu} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/modules/edit\"\r\n                            component={ManageModules}\r\n                        />\r\n                        <Route exact path=\"/modules/student\" component={ViewModules} />\r\n                        <Route exact path=\"/modules/instructor\" component={ViewModules} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/pins/edit\"\r\n                            component={DropPin}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/pins\"\r\n                            component={ViewPinOnMap}\r\n                        />\r\n    \r\n                        <Route path=\"/completed/:module/:userid\">\r\n                            <Completed/>\r\n                        </Route>\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/module/:id/edit\"\r\n                            component={EditModule}\r\n                        />\r\n                        <Route path=\"/module/:id\" component={Module} />\r\n\r\n                        <Route exact path=\"/\">\r\n                            {this.Home}\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}